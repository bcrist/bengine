#!!--[[ Bengine build script ]] include 'configure' !! 3713 ##
# ######## !! GENERATED CODE -- DO NOT MODIFY !! ######## ##
ninja_required_version = 1.7
builddir = ninja

ninja_dir = ninja
build_dir = build
out_dir = out
include_dir = include
stage_dir = stage
bin_dir = bin
deps_dir = deps
ext_src_dir = ext_src
ext_include_dir = ext_include
ext_lib_dir = ext_lib

msvc_build_dir = msvc_build
msvc_out_dir = msvc_out
msvc_ipch_dir = ipch
msvc_debug_dir = Debug

ninjacmd = ninja
clcmd = cl
rccmd = rc
libcmd = lib
linkcmd = link
pdbcmd = mspdbcmf

cl_base = /nologo /c /showIncludes /utf-8 /FS /std:c++latest /Gd /Gm- /Gy /GF /Zi /EHs /fp:precise /volatile:iso /w44746 /Qpar /Zc:rvalueCast
cl_base_defines = /D_WINDOWS /DWIN32 /D_WIN32 /D_WIN32_WINNT=0x0601 /DBE_NO_LEAKCHECK
clflags_c_extlib_debug = /Od /MDd /RTC1 /sdl- /GS /W3 /wd4334 /TC /GR- /GA /D_DEBUG /DDEBUG /D_CRT_SECURE_NO_WARNINGS /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_c_extlib_release = /Ox /MD /GL /sdl- /GS /W3 /wd4334 /TC /GR- /GA /DNDEBUG /D_CRT_SECURE_NO_WARNINGS /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_cxx_extlib_debug = /Od /MDd /RTC1 /sdl- /GS /W3 /wd4334 /TP /GR- /GA /D_DEBUG /DDEBUG /D_CRT_SECURE_NO_WARNINGS /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_cxx_extlib_release = /Ox /MD /GL /sdl- /GS /W3 /wd4334 /TP /GR- /GA /DNDEBUG /D_CRT_SECURE_NO_WARNINGS /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_lib_debug = /Od /MDd /RTC1 /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /GR- /GA /D_DEBUG /DDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DBE_DEBUG /DBE_DEBUG_TIMERS /DBE_ENABLE_MAIN_THREAD_ASSERTIONS /DBE_STATIC_LIB /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_lib_release = /Ox /MD /GL /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /GR- /GA /DNDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DBE_STATIC_LIB /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_test_debug = /Od /MDd /RTC1 /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /wd4702 /GR- /GA /Gw /Zc:inline /D_DEBUG /DDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DBE_DEBUG /DBE_DEBUG_TIMERS /DBE_ENABLE_MAIN_THREAD_ASSERTIONS /DBE_TEST /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_test_release = /Ox /MD /GL /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /wd4702 /GR- /GA /Gw /Zc:inline /DNDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DBE_TEST /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_perf_debug = /Od /MDd /RTC1 /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /wd4702 /GR- /GA /Gw /Zc:inline /D_DEBUG /DDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DBE_DEBUG /DBE_DEBUG_TIMERS /DBE_ENABLE_MAIN_THREAD_ASSERTIONS /DBE_TEST_PERF /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_perf_release = /Ox /MD /GL /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /wd4702 /GR- /GA /Gw /Zc:inline /DNDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DBE_TEST_PERF /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_rtti_debug = /Od /MDd /RTC1 /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /GR /GA /Gw /Zc:inline /D_DEBUG /DDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DBE_DEBUG /DBE_DEBUG_TIMERS /DBE_ENABLE_MAIN_THREAD_ASSERTIONS
clflags_rtti_release = /Ox /MD /GL /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /GR /GA /Gw /Zc:inline /DNDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION
clflags_debug = /Od /MDd /RTC1 /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /GR- /GA /Gw /Zc:inline /D_DEBUG /DDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DBE_DEBUG /DBE_DEBUG_TIMERS /DBE_ENABLE_MAIN_THREAD_ASSERTIONS /DBOOST_NO_TYPEID /DBOOST_NO_RTTI
clflags_release = /Ox /MD /GL /sdl- /GS /W4 /WX /wd4201 /wd4324 /wd4458 /wd4503 /wd4592 /wd5030 /GR- /GA /Gw /Zc:inline /DNDEBUG /DBE_ID_EXTERNS /DNOMINMAX /D_HAS_AUTO_PTR_ETC=1 /DGLM_FORCE_SSE4 /DSQLITE_WIN32_GETVERSIONEX=0 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DBOOST_NO_TYPEID /DBOOST_NO_RTTI

lib_base = /NOLOGO /MACHINE:X64
libflags_extlib_debug = 
libflags_extlib_release = /LTCG
libflags_debug = /WX /IGNORE:4221
libflags_release = /WX /IGNORE:4221 /LTCG

link_base = /NOLOGO /MACHINE:X64 /DYNAMICBASE /DEBUG:FASTLINK /NXCOMPAT /LIBPATH:"$ext_lib_dir" /MANIFEST:NO
link_baselibs = kernel32.lib user32.lib gdi32.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib
linkflags_console_debug = /LIBPATH:"$out_dir" /WX /IGNORE:4221 /INCREMENTAL /SUBSYSTEM:CONSOLE
linkflags_console_release = /LIBPATH:"$out_dir" /WX /IGNORE:4221 /LTCG /OPT:REF,ICF /SUBSYSTEM:CONSOLE

#### Rules ####

rule configure
   command = "$bin_dir\limp.exe" -f "build.ninja"
   description = configure
   generator = true

rule mkdir
   command = cmd /s /c "if not exist "$out" md "$out""
   description = mkdir $out
   generator = true

rule ln_dir
   command = cmd /s /c "if not exist "$out" mklink /J "$out" "$in" >nul"
   description = ln $out
   generator = true
   restat = true

rule ln_file
   command = cmd /s /c "if not exist "$out" mklink /H "$out" "$in" >nul"
   description = ln $out
   generator = true
   restat = true

rule build_boost
   command = cmd /s /c "call build_boost.cmd"
   description = build_boost
   generator = true
   rspfile = build_boost.cmd
   rspfile_content = @echo off & $
cd %BOOST_HOME% & $
(if not exist b2.exe call bootstrap.bat) & $
((.\b2.exe "--stagedir=%~dp0$ext_lib_dir" "--build-dir=%~dp0$build_dir" --build-type=complete -d1 -j4 $
--with-system --with-locale --with-type_erasure $
define=BOOST_NO_RTTI define=BOOST_NO_TYPEID $
link=static threading=multi runtime-link=shared address-model=64 $
stage > "%~dp0$build_dir\.boost_log" 2>&1 ) && $
(move /Y %~dp0$ext_lib_dir\lib\*.lib %~dp0$ext_lib_dir && rd /Q /S %~dp0$ext_lib_dir\lib ) >nul )

rule touch
   command = cmd /s /c "echo:>nul 2>>"$path""
   description = touch $path

rule superninja
   command = "$bin_dir\wedo.exe" $ninjacmd $targets $extra
   description = sudo ninja $targets
   generator = true

rule ninjatool
   command = $ninjacmd -t $tool $extra
   description = ninja -t $tool

rule rm_files
   command = cmd /s /c "del /F /Q $paths >nul 2>&1 || echo. >nul"
   description = rm $paths

rule rm_dir
   command = cmd /s /c "if exist "$path" rd /Q /S "$path""
   description = rm $path

rule rm_file
   command = cmd /s /c "if exist "$path" del /F /Q "$path""
   description = rm $path

rule cl
   command = $clcmd $cl_base $flags $cl_base_defines $extra /I"$include_dir" /I"$deps_dir" /I"$ext_include_dir" /Fo"$out" /Fd"$pdb" "$in"
   deps = msvc
   description = cl $in

rule lib
   command = $libcmd $lib_base $flags $extra /OUT:"$out" @${build_dir}\${out_file}.in
   description = lib $out
   rspfile = ${build_dir}\${out_file}.in
   rspfile_content = $in_newline

rule ragel
   command = ragel $flags -o $out $in
   description = ragel $out
   generator = true
   restat = true

rule limp
   command = "$bin_dir\limp.exe" $extra $path
   description = limp $path
   generator = true
   restat = true

rule putfile
   command = cmd /s /c "(echo:$contents)>"$out""
   description = putfile $out

rule rc
   command = $rccmd /nologo $extra /i"$include_dir" /i"$deps_dir" /i"$ext_include_dir" /fo"$out" "$in"
   deps = msvc
   description = rc $in

rule link
   command = $linkcmd $link_base $flags $extra /PDB:"$pdb" /OUT:"$out" @${build_dir}\${out_file}.in
   description = link $out
   rspfile = ${build_dir}\${out_file}.in
   rspfile_content = $link_baselibs $in_newline

rule pdb
   command = $pdbcmd $in
   description = pdb $in

rule cp
   command = cmd /s /c "copy /Y /B "$in" "$out" /B >nul"
   description = cp $out

rule deploy
   command = cmd /s /c "copy /Y /B "$in" "$out" /B >nul"
   description = deploy $out
   generator = true

#### Build Edges ####
build configure!: configure
build $build_dir: mkdir
build $out_dir: mkdir
build $include_dir: mkdir
build $stage_dir: mkdir
build $bin_dir: mkdir
build $deps_dir: mkdir
build $ext_src_dir: mkdir
build $ext_include_dir: mkdir
build $ext_lib_dir: mkdir
build $include_dir\be: mkdir | $include_dir
build $include_dir\be\blt: ln_dir modules\blt\include | $include_dir\be
build $include_dir\be\cli: ln_dir modules\cli\include | $include_dir\be
build $include_dir\be\core: ln_dir modules\core\include | $include_dir\be
build $include_dir\be\ctable: ln_dir modules\ctable\include | $include_dir\be
build $include_dir\be\luablt: ln_dir modules\luablt\include | $include_dir\be
build $include_dir\be\luacore: ln_dir modules\luacore\include | $include_dir\be
build $include_dir\be\luautil: ln_dir modules\luautil\include | $include_dir\be
build $include_dir\be\perf: ln_dir modules\perf\include | $include_dir\be
build $include_dir\be\platform: ln_dir modules\platform\include | $include_dir\be
build $include_dir\be\sqlite: ln_dir modules\sqlite\include | $include_dir\be
build $include_dir\be\testing: ln_dir modules\testing\include | $include_dir\be
build $include_dir\be\util: ln_dir modules\util\include | $include_dir\be
build init_include_links!: phony $include_dir\be\blt $include_dir\be\cli $include_dir\be\core $include_dir\be\ctable $include_dir\be\luablt $include_dir\be\luacore $include_dir\be\luautil $include_dir\be\perf $include_dir\be\platform $include_dir\be\sqlite $include_dir\be\testing $include_dir\be\util
build $ext_include_dir\glm: ln_dir dep_modules\glm\glm | $ext_include_dir
build $ext_include_dir\gsl: ln_dir dep_modules\gsl\gsl | $ext_include_dir
build $ext_include_dir\glfw: ln_dir dep_modules\glfw\include\GLFW | $ext_include_dir
build $ext_include_dir\zlib.h: ln_file dep_modules\zlib\zlib.h | $ext_include_dir
build $ext_include_dir\zconf.h: ln_file dep_modules\zlib\zconf.h | $ext_include_dir
build $ext_include_dir\stb_image.h: ln_file dep_modules\stb\stb_image.h | $ext_include_dir
build $ext_include_dir\stb_image_resize.h: ln_file dep_modules\stb\stb_image_resize.h | $ext_include_dir
build $ext_include_dir\stb_image_write.h: ln_file dep_modules\stb\stb_image_write.h | $ext_include_dir
build $ext_include_dir\lua: mkdir
build $ext_include_dir\lua\lua.h: ln_file dep_modules\lua\src\lua.h | $ext_include_dir\lua
build $ext_include_dir\lua\luaconf.h: ln_file dep_modules\lua\src\luaconf.h | $ext_include_dir\lua
build $ext_include_dir\lua\lualib.h: ln_file dep_modules\lua\src\lualib.h | $ext_include_dir\lua
build $ext_include_dir\lua\lauxlib.h: ln_file dep_modules\lua\src\lauxlib.h | $ext_include_dir\lua
build $ext_include_dir\catch.hpp: ln_file dep_modules\catch\single_include\catch.hpp | $ext_include_dir
build $ext_src_dir\lua: ln_dir dep_modules\lua\src | $ext_src_dir
build $ext_src_dir\pugiconfig.hpp: ln_file dep_modules\pugixml\src\pugiconfig.hpp | $ext_src_dir
build $ext_src_dir\pugixml.hpp: ln_file dep_modules\pugixml\src\pugixml.hpp | $ext_src_dir
build $ext_src_dir\pugixml.cpp: ln_file dep_modules\pugixml\src\pugixml.cpp | $ext_src_dir
build $build_dir\.boost_log: build_boost | $build_dir
build %BOOST_HOME%\boost: phony $build_dir\.boost_log
build $ext_include_dir\boost: ln_dir %BOOST_HOME%\boost | $ext_include_dir

build init!!: touch | $build_dir $out_dir $include_dir $stage_dir $bin_dir $deps_dir $ext_src_dir $ext_include_dir $ext_lib_dir $include_dir\be init_include_links! $ext_include_dir\glm $ext_include_dir\gsl $ext_include_dir\glfw $ext_include_dir\zlib.h $ext_include_dir\zconf.h $ext_include_dir\stb_image.h $ext_include_dir\stb_image_resize.h $ext_include_dir\stb_image_write.h $ext_include_dir\lua\lua.h $ext_include_dir\lua\luaconf.h $ext_include_dir\lua\lualib.h $ext_include_dir\lua\lauxlib.h $ext_include_dir\catch.hpp $ext_src_dir\lua $ext_src_dir\pugiconfig.hpp $ext_src_dir\pugixml.hpp $ext_src_dir\pugixml.cpp $ext_include_dir\boost
   path = $build_dir\.i9d

build $build_dir\.i9d: superninja
   targets = init!!
   extra = 
build init!: phony $build_dir\.i9d

build clean-ninja!: ninjatool
   tool = clean
   extra = 

build clean-rm-out_dir!: rm_files | clean-ninja!
   paths = $out_dir\*.*

build clean-rm-pch!: rm_files
   paths = $build_dir\*.pch

build clean-rm-pdb!: rm_files
   paths = $build_dir\*.pdb
build clean!: phony clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!

build rm_build_dir!: rm_dir | clean!
   path = $build_dir

build rm_out_dir!: rm_dir | clean!
   path = $out_dir

build rm_include_dir!: rm_dir | clean!
   path = $include_dir

build rm_ext_src_dir!: rm_dir | clean!
   path = $ext_src_dir

build rm_ext_include_dir!: rm_dir | clean!
   path = $ext_include_dir

build rm_ext_lib_dir!: rm_dir | clean!
   path = $ext_lib_dir

build rm_msvc_build_dir!: rm_dir
   path = $msvc_build_dir

build rm_msvc_out_dir!: rm_dir
   path = $msvc_out_dir

build rm_msvc_ipch_dir!: rm_dir
   path = $msvc_ipch_dir

build rm_msvc_debug_dir!: rm_dir
   path = $msvc_debug_dir

build rm_msvc_db!: rm_file
   path = msvc.VC.db

build rm_vscode_db!: rm_file
   path = .vscode\.browse.VC.db
build deinit!: phony rm_build_dir! rm_out_dir! rm_include_dir! rm_ext_src_dir! rm_ext_include_dir! rm_ext_lib_dir! rm_msvc_build_dir! rm_msvc_out_dir! rm_msvc_ipch_dir! rm_msvc_debug_dir! rm_msvc_db! rm_vscode_db!

build $build_dir\debug\zlib-static\adler32.obj: cl dep_modules\zlib\adler32.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\compress.obj: cl dep_modules\zlib\compress.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\crc32.obj: cl dep_modules\zlib\crc32.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\deflate.obj: cl dep_modules\zlib\deflate.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\gzclose.obj: cl dep_modules\zlib\gzclose.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\gzlib.obj: cl dep_modules\zlib\gzlib.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\gzread.obj: cl dep_modules\zlib\gzread.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\gzwrite.obj: cl dep_modules\zlib\gzwrite.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\infback.obj: cl dep_modules\zlib\infback.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\inffast.obj: cl dep_modules\zlib\inffast.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\inflate.obj: cl dep_modules\zlib\inflate.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\inftrees.obj: cl dep_modules\zlib\inftrees.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\trees.obj: cl dep_modules\zlib\trees.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\uncompr.obj: cl dep_modules\zlib\uncompr.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\debug\zlib-static\zutil.obj: cl dep_modules\zlib\zutil.c || init!
   pdb = $build_dir\zlib-static-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $ext_lib_dir\zlib-static-debug.lib: lib $build_dir\debug\zlib-static\adler32.obj $build_dir\debug\zlib-static\compress.obj $build_dir\debug\zlib-static\crc32.obj $build_dir\debug\zlib-static\deflate.obj $build_dir\debug\zlib-static\gzclose.obj $build_dir\debug\zlib-static\gzlib.obj $build_dir\debug\zlib-static\gzread.obj $build_dir\debug\zlib-static\gzwrite.obj $build_dir\debug\zlib-static\infback.obj $build_dir\debug\zlib-static\inffast.obj $build_dir\debug\zlib-static\inflate.obj $build_dir\debug\zlib-static\inftrees.obj $build_dir\debug\zlib-static\trees.obj $build_dir\debug\zlib-static\uncompr.obj $build_dir\debug\zlib-static\zutil.obj || init!
   out_file = zlib-static-debug.lib
   flags = $libflags_extlib_debug
   extra = 
build zlib-static-debug!: phony $ext_lib_dir\zlib-static-debug.lib

build $build_dir\release\zlib-static\adler32.obj: cl dep_modules\zlib\adler32.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\compress.obj: cl dep_modules\zlib\compress.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\crc32.obj: cl dep_modules\zlib\crc32.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\deflate.obj: cl dep_modules\zlib\deflate.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\gzclose.obj: cl dep_modules\zlib\gzclose.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\gzlib.obj: cl dep_modules\zlib\gzlib.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\gzread.obj: cl dep_modules\zlib\gzread.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\gzwrite.obj: cl dep_modules\zlib\gzwrite.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\infback.obj: cl dep_modules\zlib\infback.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\inffast.obj: cl dep_modules\zlib\inffast.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\inflate.obj: cl dep_modules\zlib\inflate.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\inftrees.obj: cl dep_modules\zlib\inftrees.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\trees.obj: cl dep_modules\zlib\trees.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\uncompr.obj: cl dep_modules\zlib\uncompr.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\zutil.obj: cl dep_modules\zlib\zutil.c || init!
   pdb = $build_dir\zlib-static.pdb
   flags = $clflags_c_extlib_release
   extra = /DNO_FSEEKO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $ext_lib_dir\zlib-static.lib: lib $build_dir\release\zlib-static\adler32.obj $build_dir\release\zlib-static\compress.obj $build_dir\release\zlib-static\crc32.obj $build_dir\release\zlib-static\deflate.obj $build_dir\release\zlib-static\gzclose.obj $build_dir\release\zlib-static\gzlib.obj $build_dir\release\zlib-static\gzread.obj $build_dir\release\zlib-static\gzwrite.obj $build_dir\release\zlib-static\infback.obj $build_dir\release\zlib-static\inffast.obj $build_dir\release\zlib-static\inflate.obj $build_dir\release\zlib-static\inftrees.obj $build_dir\release\zlib-static\trees.obj $build_dir\release\zlib-static\uncompr.obj $build_dir\release\zlib-static\zutil.obj || init!
   out_file = zlib-static.lib
   flags = $libflags_extlib_release
   extra = 
build zlib-static!: phony $ext_lib_dir\zlib-static.lib

build $build_dir\debug\glfw\src\context.obj: cl dep_modules\glfw\src\context.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\egl_context.obj: cl dep_modules\glfw\src\egl_context.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\init.obj: cl dep_modules\glfw\src\init.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\input.obj: cl dep_modules\glfw\src\input.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\monitor.obj: cl dep_modules\glfw\src\monitor.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\vulkan.obj: cl dep_modules\glfw\src\vulkan.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\wgl_context.obj: cl dep_modules\glfw\src\wgl_context.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\win32_init.obj: cl dep_modules\glfw\src\win32_init.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\win32_joystick.obj: cl dep_modules\glfw\src\win32_joystick.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\win32_monitor.obj: cl dep_modules\glfw\src\win32_monitor.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\win32_time.obj: cl dep_modules\glfw\src\win32_time.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\win32_tls.obj: cl dep_modules\glfw\src\win32_tls.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\win32_window.obj: cl dep_modules\glfw\src\win32_window.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $build_dir\debug\glfw\src\window.obj: cl dep_modules\glfw\src\window.c || init!
   pdb = $build_dir\glfw-debug.pdb
   flags = $clflags_c_extlib_debug
   extra = /D_GLFW_WIN32

build $ext_lib_dir\glfw-debug.lib: lib $build_dir\debug\glfw\src\context.obj $build_dir\debug\glfw\src\egl_context.obj $build_dir\debug\glfw\src\init.obj $build_dir\debug\glfw\src\input.obj $build_dir\debug\glfw\src\monitor.obj $build_dir\debug\glfw\src\vulkan.obj $build_dir\debug\glfw\src\wgl_context.obj $build_dir\debug\glfw\src\win32_init.obj $build_dir\debug\glfw\src\win32_joystick.obj $build_dir\debug\glfw\src\win32_monitor.obj $build_dir\debug\glfw\src\win32_time.obj $build_dir\debug\glfw\src\win32_tls.obj $build_dir\debug\glfw\src\win32_window.obj $build_dir\debug\glfw\src\window.obj || init!
   out_file = glfw-debug.lib
   flags = $libflags_extlib_debug
   extra = 
build glfw-debug!: phony $ext_lib_dir\glfw-debug.lib

build $build_dir\release\glfw\src\context.obj: cl dep_modules\glfw\src\context.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\egl_context.obj: cl dep_modules\glfw\src\egl_context.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\init.obj: cl dep_modules\glfw\src\init.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\input.obj: cl dep_modules\glfw\src\input.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\monitor.obj: cl dep_modules\glfw\src\monitor.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\vulkan.obj: cl dep_modules\glfw\src\vulkan.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\wgl_context.obj: cl dep_modules\glfw\src\wgl_context.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\win32_init.obj: cl dep_modules\glfw\src\win32_init.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\win32_joystick.obj: cl dep_modules\glfw\src\win32_joystick.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\win32_monitor.obj: cl dep_modules\glfw\src\win32_monitor.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\win32_time.obj: cl dep_modules\glfw\src\win32_time.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\win32_tls.obj: cl dep_modules\glfw\src\win32_tls.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\win32_window.obj: cl dep_modules\glfw\src\win32_window.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $build_dir\release\glfw\src\window.obj: cl dep_modules\glfw\src\window.c || init!
   pdb = $build_dir\glfw.pdb
   flags = $clflags_c_extlib_release
   extra = /D_GLFW_WIN32

build $ext_lib_dir\glfw.lib: lib $build_dir\release\glfw\src\context.obj $build_dir\release\glfw\src\egl_context.obj $build_dir\release\glfw\src\init.obj $build_dir\release\glfw\src\input.obj $build_dir\release\glfw\src\monitor.obj $build_dir\release\glfw\src\vulkan.obj $build_dir\release\glfw\src\wgl_context.obj $build_dir\release\glfw\src\win32_init.obj $build_dir\release\glfw\src\win32_joystick.obj $build_dir\release\glfw\src\win32_monitor.obj $build_dir\release\glfw\src\win32_time.obj $build_dir\release\glfw\src\win32_tls.obj $build_dir\release\glfw\src\win32_window.obj $build_dir\release\glfw\src\window.obj || init!
   out_file = glfw.lib
   flags = $libflags_extlib_release
   extra = 
build glfw!: phony $ext_lib_dir\glfw.lib

build $build_dir\debug\luaxx\src\lapi.obj: cl dep_modules\lua\src\lapi.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lauxlib.obj: cl dep_modules\lua\src\lauxlib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lbaselib.obj: cl dep_modules\lua\src\lbaselib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lbitlib.obj: cl dep_modules\lua\src\lbitlib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lcode.obj: cl dep_modules\lua\src\lcode.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lcorolib.obj: cl dep_modules\lua\src\lcorolib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lctype.obj: cl dep_modules\lua\src\lctype.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ldblib.obj: cl dep_modules\lua\src\ldblib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ldebug.obj: cl dep_modules\lua\src\ldebug.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ldo.obj: cl dep_modules\lua\src\ldo.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ldump.obj: cl dep_modules\lua\src\ldump.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lfunc.obj: cl dep_modules\lua\src\lfunc.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lgc.obj: cl dep_modules\lua\src\lgc.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\linit.obj: cl dep_modules\lua\src\linit.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\liolib.obj: cl dep_modules\lua\src\liolib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\llex.obj: cl dep_modules\lua\src\llex.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lmathlib.obj: cl dep_modules\lua\src\lmathlib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lmem.obj: cl dep_modules\lua\src\lmem.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\loadlib.obj: cl dep_modules\lua\src\loadlib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lobject.obj: cl dep_modules\lua\src\lobject.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lopcodes.obj: cl dep_modules\lua\src\lopcodes.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\loslib.obj: cl dep_modules\lua\src\loslib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lparser.obj: cl dep_modules\lua\src\lparser.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lstate.obj: cl dep_modules\lua\src\lstate.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lstring.obj: cl dep_modules\lua\src\lstring.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lstrlib.obj: cl dep_modules\lua\src\lstrlib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ltable.obj: cl dep_modules\lua\src\ltable.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ltablib.obj: cl dep_modules\lua\src\ltablib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\ltm.obj: cl dep_modules\lua\src\ltm.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lundump.obj: cl dep_modules\lua\src\lundump.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lutf8lib.obj: cl dep_modules\lua\src\lutf8lib.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lvm.obj: cl dep_modules\lua\src\lvm.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $build_dir\debug\luaxx\src\lzio.obj: cl dep_modules\lua\src\lzio.c || init!
   pdb = $build_dir\luaxx-debug.pdb
   flags = $clflags_cxx_extlib_debug
   extra = 

build $ext_lib_dir\luaxx-debug.lib: lib $build_dir\debug\luaxx\src\lapi.obj $build_dir\debug\luaxx\src\lauxlib.obj $build_dir\debug\luaxx\src\lbaselib.obj $build_dir\debug\luaxx\src\lbitlib.obj $build_dir\debug\luaxx\src\lcode.obj $build_dir\debug\luaxx\src\lcorolib.obj $build_dir\debug\luaxx\src\lctype.obj $build_dir\debug\luaxx\src\ldblib.obj $build_dir\debug\luaxx\src\ldebug.obj $build_dir\debug\luaxx\src\ldo.obj $build_dir\debug\luaxx\src\ldump.obj $build_dir\debug\luaxx\src\lfunc.obj $build_dir\debug\luaxx\src\lgc.obj $build_dir\debug\luaxx\src\linit.obj $build_dir\debug\luaxx\src\liolib.obj $build_dir\debug\luaxx\src\llex.obj $build_dir\debug\luaxx\src\lmathlib.obj $build_dir\debug\luaxx\src\lmem.obj $build_dir\debug\luaxx\src\loadlib.obj $build_dir\debug\luaxx\src\lobject.obj $build_dir\debug\luaxx\src\lopcodes.obj $build_dir\debug\luaxx\src\loslib.obj $build_dir\debug\luaxx\src\lparser.obj $build_dir\debug\luaxx\src\lstate.obj $build_dir\debug\luaxx\src\lstring.obj $build_dir\debug\luaxx\src\lstrlib.obj $build_dir\debug\luaxx\src\ltable.obj $build_dir\debug\luaxx\src\ltablib.obj $build_dir\debug\luaxx\src\ltm.obj $build_dir\debug\luaxx\src\lundump.obj $build_dir\debug\luaxx\src\lutf8lib.obj $build_dir\debug\luaxx\src\lvm.obj $build_dir\debug\luaxx\src\lzio.obj || init!
   out_file = luaxx-debug.lib
   flags = $libflags_extlib_debug
   extra = 
build luaxx-debug!: phony $ext_lib_dir\luaxx-debug.lib

build $build_dir\release\luaxx\src\lapi.obj: cl dep_modules\lua\src\lapi.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lauxlib.obj: cl dep_modules\lua\src\lauxlib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lbaselib.obj: cl dep_modules\lua\src\lbaselib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lbitlib.obj: cl dep_modules\lua\src\lbitlib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lcode.obj: cl dep_modules\lua\src\lcode.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lcorolib.obj: cl dep_modules\lua\src\lcorolib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lctype.obj: cl dep_modules\lua\src\lctype.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ldblib.obj: cl dep_modules\lua\src\ldblib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ldebug.obj: cl dep_modules\lua\src\ldebug.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ldo.obj: cl dep_modules\lua\src\ldo.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ldump.obj: cl dep_modules\lua\src\ldump.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lfunc.obj: cl dep_modules\lua\src\lfunc.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lgc.obj: cl dep_modules\lua\src\lgc.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\linit.obj: cl dep_modules\lua\src\linit.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\liolib.obj: cl dep_modules\lua\src\liolib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\llex.obj: cl dep_modules\lua\src\llex.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lmathlib.obj: cl dep_modules\lua\src\lmathlib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lmem.obj: cl dep_modules\lua\src\lmem.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\loadlib.obj: cl dep_modules\lua\src\loadlib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lobject.obj: cl dep_modules\lua\src\lobject.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lopcodes.obj: cl dep_modules\lua\src\lopcodes.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\loslib.obj: cl dep_modules\lua\src\loslib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lparser.obj: cl dep_modules\lua\src\lparser.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lstate.obj: cl dep_modules\lua\src\lstate.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lstring.obj: cl dep_modules\lua\src\lstring.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lstrlib.obj: cl dep_modules\lua\src\lstrlib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ltable.obj: cl dep_modules\lua\src\ltable.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ltablib.obj: cl dep_modules\lua\src\ltablib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\ltm.obj: cl dep_modules\lua\src\ltm.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lundump.obj: cl dep_modules\lua\src\lundump.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lutf8lib.obj: cl dep_modules\lua\src\lutf8lib.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lvm.obj: cl dep_modules\lua\src\lvm.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $build_dir\release\luaxx\src\lzio.obj: cl dep_modules\lua\src\lzio.c || init!
   pdb = $build_dir\luaxx.pdb
   flags = $clflags_cxx_extlib_release
   extra = 

build $ext_lib_dir\luaxx.lib: lib $build_dir\release\luaxx\src\lapi.obj $build_dir\release\luaxx\src\lauxlib.obj $build_dir\release\luaxx\src\lbaselib.obj $build_dir\release\luaxx\src\lbitlib.obj $build_dir\release\luaxx\src\lcode.obj $build_dir\release\luaxx\src\lcorolib.obj $build_dir\release\luaxx\src\lctype.obj $build_dir\release\luaxx\src\ldblib.obj $build_dir\release\luaxx\src\ldebug.obj $build_dir\release\luaxx\src\ldo.obj $build_dir\release\luaxx\src\ldump.obj $build_dir\release\luaxx\src\lfunc.obj $build_dir\release\luaxx\src\lgc.obj $build_dir\release\luaxx\src\linit.obj $build_dir\release\luaxx\src\liolib.obj $build_dir\release\luaxx\src\llex.obj $build_dir\release\luaxx\src\lmathlib.obj $build_dir\release\luaxx\src\lmem.obj $build_dir\release\luaxx\src\loadlib.obj $build_dir\release\luaxx\src\lobject.obj $build_dir\release\luaxx\src\lopcodes.obj $build_dir\release\luaxx\src\loslib.obj $build_dir\release\luaxx\src\lparser.obj $build_dir\release\luaxx\src\lstate.obj $build_dir\release\luaxx\src\lstring.obj $build_dir\release\luaxx\src\lstrlib.obj $build_dir\release\luaxx\src\ltable.obj $build_dir\release\luaxx\src\ltablib.obj $build_dir\release\luaxx\src\ltm.obj $build_dir\release\luaxx\src\lundump.obj $build_dir\release\luaxx\src\lutf8lib.obj $build_dir\release\luaxx\src\lvm.obj $build_dir\release\luaxx\src\lzio.obj || init!
   out_file = luaxx.lib
   flags = $libflags_extlib_release
   extra = 
build luaxx!: phony $ext_lib_dir\luaxx.lib

build modules\blt\src\lexer.cpp: ragel modules\blt\meta\lexer.rl
   flags = -s -C -L -G2

build $build_dir\debug\blt\src\pch.obj: cl modules\blt\src\pch.cpp || init!
   pdb = $build_dir\blt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt-debug.pch" /Yc"pch.hpp"
build $build_dir\blt-debug.pch: phony $build_dir\debug\blt\src\pch.obj

build $build_dir\debug\blt\src\blt.obj: cl modules\blt\src\blt.cpp | $build_dir\blt-debug.pch || init!
   pdb = $build_dir\blt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\blt\src\lexer.obj: cl modules\blt\src\lexer.cpp | $build_dir\blt-debug.pch || init!
   pdb = $build_dir\blt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\blt\src\parser.obj: cl modules\blt\src\parser.cpp | $build_dir\blt-debug.pch || init!
   pdb = $build_dir\blt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\blt\src\token_data.obj: cl modules\blt\src\token_data.cpp | $build_dir\blt-debug.pch || init!
   pdb = $build_dir\blt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\blt\src\token_type.obj: cl modules\blt\src\token_type.cpp | $build_dir\blt-debug.pch || init!
   pdb = $build_dir\blt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt-debug.pch" /Yu"pch.hpp"

build $out_dir\blt-debug.lib: lib $build_dir\debug\blt\src\blt.obj $build_dir\debug\blt\src\lexer.obj $build_dir\debug\blt\src\parser.obj $build_dir\debug\blt\src\pch.obj $build_dir\debug\blt\src\token_data.obj $build_dir\debug\blt\src\token_type.obj || init!
   out_file = blt-debug.lib
   flags = $libflags_debug
   extra = 
build blt-debug!: phony $out_dir\blt-debug.lib

build $build_dir\release\blt\src\pch.obj: cl modules\blt\src\pch.cpp || init!
   pdb = $build_dir\blt.pdb
   flags = $clflags_lib_release
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yc"pch.hpp"
build $build_dir\blt.pch: phony $build_dir\release\blt\src\pch.obj

build $build_dir\release\blt\src\blt.obj: cl modules\blt\src\blt.cpp | $build_dir\blt.pch || init!
   pdb = $build_dir\blt.pdb
   flags = $clflags_lib_release
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\lexer.obj: cl modules\blt\src\lexer.cpp | $build_dir\blt.pch || init!
   pdb = $build_dir\blt.pdb
   flags = $clflags_lib_release
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\parser.obj: cl modules\blt\src\parser.cpp | $build_dir\blt.pch || init!
   pdb = $build_dir\blt.pdb
   flags = $clflags_lib_release
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\token_data.obj: cl modules\blt\src\token_data.cpp | $build_dir\blt.pch || init!
   pdb = $build_dir\blt.pdb
   flags = $clflags_lib_release
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\token_type.obj: cl modules\blt\src\token_type.cpp | $build_dir\blt.pch || init!
   pdb = $build_dir\blt.pdb
   flags = $clflags_lib_release
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $out_dir\blt.lib: lib $build_dir\release\blt\src\blt.obj $build_dir\release\blt\src\lexer.obj $build_dir\release\blt\src\parser.obj $build_dir\release\blt\src\pch.obj $build_dir\release\blt\src\token_data.obj $build_dir\release\blt\src\token_type.obj || init!
   out_file = blt.lib
   flags = $libflags_release
   extra = 
build blt!: phony $out_dir\blt.lib
build blt-full!: phony blt! blt-debug!

build modules\cli\include\section_ids.hpp!: limp || init!
   path = modules\cli\include\section_ids.hpp

build $build_dir\debug\cli\src\pch.obj: cl modules\cli\src\pch.cpp || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yc"pch.hpp"
build $build_dir\cli-debug.pch: phony $build_dir\debug\cli\src\pch.obj

build $build_dir\debug\cli\src\app_name.obj: cl modules\cli\src\app_name.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\default_option_parser.obj: cl modules\cli\src\default_option_parser.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\describe_config.obj: cl modules\cli\src\describe_config.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\handler_context.obj: cl modules\cli\src\handler_context.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\ids.obj: cl modules\cli\src\ids.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\native\vc_win\escape_cli_arg.obj: cl modules\cli\src\native\vc_win\escape_cli_arg.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\processor.obj: cl modules\cli\src\processor.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\cli\src\verbosity_param.obj: cl modules\cli\src\verbosity_param.cpp | $build_dir\cli-debug.pch || init!
   pdb = $build_dir\cli-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli-debug.pch" /Yu"pch.hpp"

build $out_dir\cli-debug.lib: lib $build_dir\debug\cli\src\app_name.obj $build_dir\debug\cli\src\default_option_parser.obj $build_dir\debug\cli\src\describe_config.obj $build_dir\debug\cli\src\handler_context.obj $build_dir\debug\cli\src\ids.obj $build_dir\debug\cli\src\native\vc_win\escape_cli_arg.obj $build_dir\debug\cli\src\pch.obj $build_dir\debug\cli\src\processor.obj $build_dir\debug\cli\src\verbosity_param.obj || init!
   out_file = cli-debug.lib
   flags = $libflags_debug
   extra = 
build cli-debug!: phony $out_dir\cli-debug.lib

build $build_dir\release\cli\src\pch.obj: cl modules\cli\src\pch.cpp || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yc"pch.hpp"
build $build_dir\cli.pch: phony $build_dir\release\cli\src\pch.obj

build $build_dir\release\cli\src\app_name.obj: cl modules\cli\src\app_name.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\default_option_parser.obj: cl modules\cli\src\default_option_parser.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\describe_config.obj: cl modules\cli\src\describe_config.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\handler_context.obj: cl modules\cli\src\handler_context.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\ids.obj: cl modules\cli\src\ids.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\native\vc_win\escape_cli_arg.obj: cl modules\cli\src\native\vc_win\escape_cli_arg.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\processor.obj: cl modules\cli\src\processor.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\verbosity_param.obj: cl modules\cli\src\verbosity_param.cpp | $build_dir\cli.pch || init!
   pdb = $build_dir\cli.pdb
   flags = $clflags_lib_release
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $out_dir\cli.lib: lib $build_dir\release\cli\src\app_name.obj $build_dir\release\cli\src\default_option_parser.obj $build_dir\release\cli\src\describe_config.obj $build_dir\release\cli\src\handler_context.obj $build_dir\release\cli\src\ids.obj $build_dir\release\cli\src\native\vc_win\escape_cli_arg.obj $build_dir\release\cli\src\pch.obj $build_dir\release\cli\src\processor.obj $build_dir\release\cli\src\verbosity_param.obj || init!
   out_file = cli.lib
   flags = $libflags_release
   extra = 
build cli!: phony $out_dir\cli.lib
build cli-full!: phony cli! cli-debug!

build $build_dir\debug\core-id\src\id.obj: cl modules\core\src\id.cpp || init!
   pdb = $build_dir\core-id-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_TARGET=core-id /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-id\src\namespaced_id.obj: cl modules\core\src\namespaced_id.cpp || init!
   pdb = $build_dir\core-id-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_TARGET=core-id /DBE_TARGET_BASE=core /I"modules\core\include"

build $out_dir\core-id-debug.lib: lib $build_dir\debug\core-id\src\id.obj $build_dir\debug\core-id\src\namespaced_id.obj || init!
   out_file = core-id-debug.lib
   flags = $libflags_debug
   extra = 
build core-id-debug!: phony $out_dir\core-id-debug.lib

build $build_dir\release\core-id\src\id.obj: cl modules\core\src\id.cpp || init!
   pdb = $build_dir\core-id.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_TARGET=core-id /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-id\src\namespaced_id.obj: cl modules\core\src\namespaced_id.cpp || init!
   pdb = $build_dir\core-id.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_TARGET=core-id /DBE_TARGET_BASE=core /I"modules\core\include"

build $out_dir\core-id.lib: lib $build_dir\release\core-id\src\id.obj $build_dir\release\core-id\src\namespaced_id.obj || init!
   out_file = core-id.lib
   flags = $libflags_release
   extra = 
build core-id!: phony $out_dir\core-id.lib
build core-id-full!: phony core-id! core-id-debug!

build $build_dir\debug\core-id-with-names\src\id.obj: cl modules\core\src\id.cpp || init!
   pdb = $build_dir\core-id-with-names-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-id-with-names /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-id-with-names\src\namespaced_id.obj: cl modules\core\src\namespaced_id.cpp || init!
   pdb = $build_dir\core-id-with-names-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-id-with-names /DBE_TARGET_BASE=core /I"modules\core\include"

build $out_dir\core-id-with-names-debug.lib: lib $build_dir\debug\core-id-with-names\src\id.obj $build_dir\debug\core-id-with-names\src\namespaced_id.obj || init!
   out_file = core-id-with-names-debug.lib
   flags = $libflags_debug
   extra = 
build core-id-with-names-debug!: phony $out_dir\core-id-with-names-debug.lib

build $build_dir\release\core-id-with-names\src\id.obj: cl modules\core\src\id.cpp || init!
   pdb = $build_dir\core-id-with-names.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-id-with-names /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-id-with-names\src\namespaced_id.obj: cl modules\core\src\namespaced_id.cpp || init!
   pdb = $build_dir\core-id-with-names.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-id-with-names /DBE_TARGET_BASE=core /I"modules\core\include"

build $out_dir\core-id-with-names.lib: lib $build_dir\release\core-id-with-names\src\id.obj $build_dir\release\core-id-with-names\src\namespaced_id.obj || init!
   out_file = core-id-with-names.lib
   flags = $libflags_release
   extra = 
build core-id-with-names!: phony $out_dir\core-id-with-names.lib
build core-id-with-names-full!: phony core-id-with-names! core-id-with-names-debug!

build modules\core\include\log_attrib_ids.hpp!: limp || init!
   path = modules\core\include\log_attrib_ids.hpp

build modules\core\include\service_ids.hpp!: limp || init!
   path = modules\core\include\service_ids.hpp

build $build_dir\debug\core\src\pch.obj: cl modules\core\src\pch.cpp || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yc"pch.hpp"
build $build_dir\core-debug.pch: phony $build_dir\debug\core\src\pch.obj

build $build_dir\debug\core\src\a3_vmm_alloc.obj: cl modules\core\src\a3_vmm_alloc.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\console_color.obj: cl modules\core\src\console_color.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\console_indent.obj: cl modules\core\src\console_indent.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\console_log_sink.obj: cl modules\core\src\console_log_sink.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\id_collision_handler.obj: cl modules\core\src\id_collision_handler.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\ids.obj: cl modules\core\src\ids.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\io_service_thread_pool.obj: cl modules\core\src\io_service_thread_pool.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\lifecycle.obj: cl modules\core\src\lifecycle.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\log.obj: cl modules\core\src\log.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\log_expr_ops.obj: cl modules\core\src\log_expr_ops.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\log_processor.obj: cl modules\core\src\log_processor.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\memory_status.obj: cl modules\core\src\memory_status.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\console.obj: cl modules\core\src\native\vc_win\console.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\console_color.obj: cl modules\core\src\native\vc_win\console_color.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\filesystem.obj: cl modules\core\src\native\vc_win\filesystem.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\lifecycle.obj: cl modules\core\src\native\vc_win\lifecycle.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\memory.obj: cl modules\core\src\native\vc_win\memory.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\native.obj: cl modules\core\src\native\vc_win\native.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\stack_trace.obj: cl modules\core\src\native\vc_win\stack_trace.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\time.obj: cl modules\core\src\native\vc_win\time.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\native\vc_win\utf16_widen_narrow.obj: cl modules\core\src\native\vc_win\utf16_widen_narrow.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\service_io_service.obj: cl modules\core\src\service_io_service.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\service_io_service_thread_pool.obj: cl modules\core\src\service_io_service_thread_pool.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\service_log.obj: cl modules\core\src\service_log.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\service_simple_single_thread_executor.obj: cl modules\core\src\service_simple_single_thread_executor.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\stack_trace.obj: cl modules\core\src\stack_trace.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\time.obj: cl modules\core\src\time.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\core\src\zlib.obj: cl modules\core\src\zlib.cpp | $build_dir\core-debug.pch || init!
   pdb = $build_dir\core-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core-debug.pch" /Yu"pch.hpp"

build $out_dir\core-debug.lib: lib $build_dir\debug\core\src\a3_vmm_alloc.obj $build_dir\debug\core\src\console_color.obj $build_dir\debug\core\src\console_indent.obj $build_dir\debug\core\src\console_log_sink.obj $build_dir\debug\core\src\id_collision_handler.obj $build_dir\debug\core\src\ids.obj $build_dir\debug\core\src\io_service_thread_pool.obj $build_dir\debug\core\src\lifecycle.obj $build_dir\debug\core\src\log.obj $build_dir\debug\core\src\log_expr_ops.obj $build_dir\debug\core\src\log_processor.obj $build_dir\debug\core\src\memory_status.obj $build_dir\debug\core\src\native\vc_win\console.obj $build_dir\debug\core\src\native\vc_win\console_color.obj $build_dir\debug\core\src\native\vc_win\filesystem.obj $build_dir\debug\core\src\native\vc_win\lifecycle.obj $build_dir\debug\core\src\native\vc_win\memory.obj $build_dir\debug\core\src\native\vc_win\native.obj $build_dir\debug\core\src\native\vc_win\stack_trace.obj $build_dir\debug\core\src\native\vc_win\time.obj $build_dir\debug\core\src\native\vc_win\utf16_widen_narrow.obj $build_dir\debug\core\src\pch.obj $build_dir\debug\core\src\service_io_service.obj $build_dir\debug\core\src\service_io_service_thread_pool.obj $build_dir\debug\core\src\service_log.obj $build_dir\debug\core\src\service_simple_single_thread_executor.obj $build_dir\debug\core\src\stack_trace.obj $build_dir\debug\core\src\time.obj $build_dir\debug\core\src\zlib.obj || init!
   out_file = core-debug.lib
   flags = $libflags_debug
   extra = 
build core-debug!: phony $out_dir\core-debug.lib

build $build_dir\release\core\src\pch.obj: cl modules\core\src\pch.cpp || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yc"pch.hpp"
build $build_dir\core.pch: phony $build_dir\release\core\src\pch.obj

build $build_dir\release\core\src\a3_vmm_alloc.obj: cl modules\core\src\a3_vmm_alloc.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\console_color.obj: cl modules\core\src\console_color.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\console_indent.obj: cl modules\core\src\console_indent.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\console_log_sink.obj: cl modules\core\src\console_log_sink.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\id_collision_handler.obj: cl modules\core\src\id_collision_handler.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\ids.obj: cl modules\core\src\ids.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\io_service_thread_pool.obj: cl modules\core\src\io_service_thread_pool.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\lifecycle.obj: cl modules\core\src\lifecycle.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log.obj: cl modules\core\src\log.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log_expr_ops.obj: cl modules\core\src\log_expr_ops.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log_processor.obj: cl modules\core\src\log_processor.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\memory_status.obj: cl modules\core\src\memory_status.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\console.obj: cl modules\core\src\native\vc_win\console.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\console_color.obj: cl modules\core\src\native\vc_win\console_color.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\filesystem.obj: cl modules\core\src\native\vc_win\filesystem.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\lifecycle.obj: cl modules\core\src\native\vc_win\lifecycle.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\memory.obj: cl modules\core\src\native\vc_win\memory.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\native.obj: cl modules\core\src\native\vc_win\native.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\stack_trace.obj: cl modules\core\src\native\vc_win\stack_trace.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\time.obj: cl modules\core\src\native\vc_win\time.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\utf16_widen_narrow.obj: cl modules\core\src\native\vc_win\utf16_widen_narrow.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_io_service.obj: cl modules\core\src\service_io_service.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_io_service_thread_pool.obj: cl modules\core\src\service_io_service_thread_pool.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_log.obj: cl modules\core\src\service_log.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_simple_single_thread_executor.obj: cl modules\core\src\service_simple_single_thread_executor.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\stack_trace.obj: cl modules\core\src\stack_trace.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\time.obj: cl modules\core\src\time.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\zlib.obj: cl modules\core\src\zlib.cpp | $build_dir\core.pch || init!
   pdb = $build_dir\core.pdb
   flags = $clflags_lib_release
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $out_dir\core.lib: lib $build_dir\release\core\src\a3_vmm_alloc.obj $build_dir\release\core\src\console_color.obj $build_dir\release\core\src\console_indent.obj $build_dir\release\core\src\console_log_sink.obj $build_dir\release\core\src\id_collision_handler.obj $build_dir\release\core\src\ids.obj $build_dir\release\core\src\io_service_thread_pool.obj $build_dir\release\core\src\lifecycle.obj $build_dir\release\core\src\log.obj $build_dir\release\core\src\log_expr_ops.obj $build_dir\release\core\src\log_processor.obj $build_dir\release\core\src\memory_status.obj $build_dir\release\core\src\native\vc_win\console.obj $build_dir\release\core\src\native\vc_win\console_color.obj $build_dir\release\core\src\native\vc_win\filesystem.obj $build_dir\release\core\src\native\vc_win\lifecycle.obj $build_dir\release\core\src\native\vc_win\memory.obj $build_dir\release\core\src\native\vc_win\native.obj $build_dir\release\core\src\native\vc_win\stack_trace.obj $build_dir\release\core\src\native\vc_win\time.obj $build_dir\release\core\src\native\vc_win\utf16_widen_narrow.obj $build_dir\release\core\src\pch.obj $build_dir\release\core\src\service_io_service.obj $build_dir\release\core\src\service_io_service_thread_pool.obj $build_dir\release\core\src\service_log.obj $build_dir\release\core\src\service_simple_single_thread_executor.obj $build_dir\release\core\src\stack_trace.obj $build_dir\release\core\src\time.obj $build_dir\release\core\src\zlib.obj || init!
   out_file = core.lib
   flags = $libflags_release
   extra = 
build core!: phony $out_dir\core.lib
build core-full!: phony core! core-debug!

build $build_dir\debug\core-test\test\test_a3_aligned_malloc_alloc.obj: cl modules\core\test\test_a3_aligned_malloc_alloc.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_a3_buf_alloc.obj: cl modules\core\test\test_a3_buf_alloc.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_a3_malloc_alloc.obj: cl modules\core\test\test_a3_malloc_alloc.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_a3_null_alloc.obj: cl modules\core\test\test_a3_null_alloc.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_a3_static_alloc.obj: cl modules\core\test\test_a3_static_alloc.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_a3_vmm_alloc.obj: cl modules\core\test\test_a3_vmm_alloc.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_handles.obj: cl modules\core\test\test_handles.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_inline_executors.obj: cl modules\core\test\test_inline_executors.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_main.obj: cl modules\core\test\test_main.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_single_thread_executors.obj: cl modules\core\test\test_single_thread_executors.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_stack_trace.obj: cl modules\core\test\test_stack_trace.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_string_interpolation.obj: cl modules\core\test\test_string_interpolation.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-test\test\test_thread_pool_executors.obj: cl modules\core\test\test_thread_pool_executors.cpp || init!
   pdb = $build_dir\core-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\core-test-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\core-test-debug.icon.res: rc $build_dir\core-test-debug.icon.rc || init!
   extra = /i"./"

build $build_dir\default.manifest: putfile || init!
   contents = ^<?xml version=^"1.0^" encoding=^"UTF-8^" standalone=^"yes^"?^>&echo:$
^<assembly xmlns=^"urn:schemas-microsoft-com:asm.v1^" manifestVersion=^"1.0^"^>&echo:$
   ^<trustInfo xmlns=^"urn:schemas-microsoft-com:asm.v3^"^>&echo:$
      ^<security^>&echo:$
         ^<requestedPrivileges^>&echo:$
            ^<requestedExecutionLevel level=^"asInvoker^" uiAccess=^"false^"/^>&echo:$
         ^</requestedPrivileges^>&echo:$
      ^</security^>&echo:$
   ^</trustInfo^>&echo:$
^</assembly^>

build $build_dir\default.manifest.rc: putfile | $build_dir\default.manifest
   contents = #include ^<winuser.h^>&echo:$
1 RT_MANIFEST ^"default.manifest^"
build $build_dir\default.manifest.res: rc $build_dir\default.manifest.rc || init!

build $out_dir\core-test-debug.exe | $out_dir\core-test-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\testing-debug.lib $build_dir\debug\core-test\test\test_a3_aligned_malloc_alloc.obj $build_dir\debug\core-test\test\test_a3_buf_alloc.obj $build_dir\debug\core-test\test\test_a3_malloc_alloc.obj $build_dir\debug\core-test\test\test_a3_null_alloc.obj $build_dir\debug\core-test\test\test_a3_static_alloc.obj $build_dir\debug\core-test\test\test_a3_vmm_alloc.obj $build_dir\debug\core-test\test\test_handles.obj $build_dir\debug\core-test\test\test_inline_executors.obj $build_dir\debug\core-test\test\test_main.obj $build_dir\debug\core-test\test\test_single_thread_executors.obj $build_dir\debug\core-test\test\test_stack_trace.obj $build_dir\debug\core-test\test\test_string_interpolation.obj $build_dir\debug\core-test\test\test_thread_pool_executors.obj $build_dir\core-test-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = core-test-debug.exe
   pdb = $out_dir\core-test-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\core-test-debug.pdb!: pdb $out_dir\core-test-debug.pdb
build $stage_dir\core-test-debug.exe: cp $out_dir\core-test-debug.exe
build core-test-debug!: phony $out_dir\core-test-debug.exe $stage_dir\core-test-debug.exe

build $build_dir\release\core-test\test\test_a3_aligned_malloc_alloc.obj: cl modules\core\test\test_a3_aligned_malloc_alloc.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_buf_alloc.obj: cl modules\core\test\test_a3_buf_alloc.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_malloc_alloc.obj: cl modules\core\test\test_a3_malloc_alloc.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_null_alloc.obj: cl modules\core\test\test_a3_null_alloc.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_static_alloc.obj: cl modules\core\test\test_a3_static_alloc.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_vmm_alloc.obj: cl modules\core\test\test_a3_vmm_alloc.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_handles.obj: cl modules\core\test\test_handles.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_inline_executors.obj: cl modules\core\test\test_inline_executors.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_main.obj: cl modules\core\test\test_main.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_single_thread_executors.obj: cl modules\core\test\test_single_thread_executors.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_stack_trace.obj: cl modules\core\test\test_stack_trace.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_string_interpolation.obj: cl modules\core\test\test_string_interpolation.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-test\test\test_thread_pool_executors.obj: cl modules\core\test\test_thread_pool_executors.cpp || init!
   pdb = $build_dir\core-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=core-test /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\core-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\core-test.icon.res: rc $build_dir\core-test.icon.rc || init!
   extra = /i"./"

build $out_dir\core-test.exe | $out_dir\core-test.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\testing.lib $build_dir\release\core-test\test\test_a3_aligned_malloc_alloc.obj $build_dir\release\core-test\test\test_a3_buf_alloc.obj $build_dir\release\core-test\test\test_a3_malloc_alloc.obj $build_dir\release\core-test\test\test_a3_null_alloc.obj $build_dir\release\core-test\test\test_a3_static_alloc.obj $build_dir\release\core-test\test\test_a3_vmm_alloc.obj $build_dir\release\core-test\test\test_handles.obj $build_dir\release\core-test\test\test_inline_executors.obj $build_dir\release\core-test\test\test_main.obj $build_dir\release\core-test\test\test_single_thread_executors.obj $build_dir\release\core-test\test\test_stack_trace.obj $build_dir\release\core-test\test\test_string_interpolation.obj $build_dir\release\core-test\test\test_thread_pool_executors.obj $build_dir\core-test.icon.res $build_dir\default.manifest.res || init!
   out_file = core-test.exe
   pdb = $out_dir\core-test.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\core-test.pdb!: pdb $out_dir\core-test.pdb
build $stage_dir\core-test.exe: cp $out_dir\core-test.exe
build core-test!: phony $out_dir\core-test.exe $stage_dir\core-test.exe
build core-test-full!: phony core-test! core-test-debug!

build $build_dir\debug\core-perf\perf\perf_handle_retirement.obj: cl modules\core\perf\perf_handle_retirement.cpp || init!
   pdb = $build_dir\core-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-perf\perf\perf_logging.obj: cl modules\core\perf\perf_logging.cpp || init!
   pdb = $build_dir\core-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-perf\perf\perf_main.obj: cl modules\core\perf\perf_main.cpp || init!
   pdb = $build_dir\core-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\debug\core-perf\perf\perf_thread_local.obj: cl modules\core\perf\perf_thread_local.cpp || init!
   pdb = $build_dir\core-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\core-perf-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\core-perf-debug.icon.res: rc $build_dir\core-perf-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\core-perf-debug.exe | $out_dir\core-perf-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\testing-debug.lib $build_dir\debug\core-perf\perf\perf_handle_retirement.obj $build_dir\debug\core-perf\perf\perf_logging.obj $build_dir\debug\core-perf\perf\perf_main.obj $build_dir\debug\core-perf\perf\perf_thread_local.obj $build_dir\core-perf-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = core-perf-debug.exe
   pdb = $out_dir\core-perf-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\core-perf-debug.pdb!: pdb $out_dir\core-perf-debug.pdb
build $stage_dir\core-perf-debug.exe: cp $out_dir\core-perf-debug.exe
build core-perf-debug!: phony $out_dir\core-perf-debug.exe $stage_dir\core-perf-debug.exe

build $build_dir\release\core-perf\perf\perf_handle_retirement.obj: cl modules\core\perf\perf_handle_retirement.cpp || init!
   pdb = $build_dir\core-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-perf\perf\perf_logging.obj: cl modules\core\perf\perf_logging.cpp || init!
   pdb = $build_dir\core-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-perf\perf\perf_main.obj: cl modules\core\perf\perf_main.cpp || init!
   pdb = $build_dir\core-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\release\core-perf\perf\perf_thread_local.obj: cl modules\core\perf\perf_thread_local.cpp || init!
   pdb = $build_dir\core-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /I"modules\core\include"

build $build_dir\core-perf.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\core-perf.icon.res: rc $build_dir\core-perf.icon.rc || init!
   extra = /i"./"

build $out_dir\core-perf.exe | $out_dir\core-perf.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\testing.lib $build_dir\release\core-perf\perf\perf_handle_retirement.obj $build_dir\release\core-perf\perf\perf_logging.obj $build_dir\release\core-perf\perf\perf_main.obj $build_dir\release\core-perf\perf\perf_thread_local.obj $build_dir\core-perf.icon.res $build_dir\default.manifest.res || init!
   out_file = core-perf.exe
   pdb = $out_dir\core-perf.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\core-perf.pdb!: pdb $out_dir\core-perf.pdb
build $stage_dir\core-perf.exe: cp $out_dir\core-perf.exe
build core-perf!: phony $out_dir\core-perf.exe $stage_dir\core-perf.exe
build core-perf-full!: phony core-perf! core-perf-debug!

build $build_dir\debug\ctable\src\pch.obj: cl modules\ctable\src\pch.cpp || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yc"pch.hpp"
build $build_dir\ctable-debug.pch: phony $build_dir\debug\ctable\src\pch.obj

build $build_dir\debug\ctable\src\border_config.obj: cl modules\ctable\src\border_config.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\box_config.obj: cl modules\ctable\src\box_config.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\cell.obj: cl modules\ctable\src\cell.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\cell_renderer.obj: cl modules\ctable\src\cell_renderer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\column_sizer.obj: cl modules\ctable\src\column_sizer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\row.obj: cl modules\ctable\src\row.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\row_renderer.obj: cl modules\ctable\src\row_renderer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\row_sizer.obj: cl modules\ctable\src\row_sizer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\table.obj: cl modules\ctable\src\table.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\table_renderer.obj: cl modules\ctable\src\table_renderer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\table_sizer.obj: cl modules\ctable\src\table_sizer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\ctable\src\text_renderer.obj: cl modules\ctable\src\text_renderer.cpp | $build_dir\ctable-debug.pch || init!
   pdb = $build_dir\ctable-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable-debug.pch" /Yu"pch.hpp"

build $out_dir\ctable-debug.lib: lib $build_dir\debug\ctable\src\border_config.obj $build_dir\debug\ctable\src\box_config.obj $build_dir\debug\ctable\src\cell.obj $build_dir\debug\ctable\src\cell_renderer.obj $build_dir\debug\ctable\src\column_sizer.obj $build_dir\debug\ctable\src\pch.obj $build_dir\debug\ctable\src\row.obj $build_dir\debug\ctable\src\row_renderer.obj $build_dir\debug\ctable\src\row_sizer.obj $build_dir\debug\ctable\src\table.obj $build_dir\debug\ctable\src\table_renderer.obj $build_dir\debug\ctable\src\table_sizer.obj $build_dir\debug\ctable\src\text_renderer.obj || init!
   out_file = ctable-debug.lib
   flags = $libflags_debug
   extra = 
build ctable-debug!: phony $out_dir\ctable-debug.lib

build $build_dir\release\ctable\src\pch.obj: cl modules\ctable\src\pch.cpp || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yc"pch.hpp"
build $build_dir\ctable.pch: phony $build_dir\release\ctable\src\pch.obj

build $build_dir\release\ctable\src\border_config.obj: cl modules\ctable\src\border_config.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\box_config.obj: cl modules\ctable\src\box_config.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\cell.obj: cl modules\ctable\src\cell.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\cell_renderer.obj: cl modules\ctable\src\cell_renderer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\column_sizer.obj: cl modules\ctable\src\column_sizer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\row.obj: cl modules\ctable\src\row.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\row_renderer.obj: cl modules\ctable\src\row_renderer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\row_sizer.obj: cl modules\ctable\src\row_sizer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\table.obj: cl modules\ctable\src\table.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\table_renderer.obj: cl modules\ctable\src\table_renderer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\table_sizer.obj: cl modules\ctable\src\table_sizer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\text_renderer.obj: cl modules\ctable\src\text_renderer.cpp | $build_dir\ctable.pch || init!
   pdb = $build_dir\ctable.pdb
   flags = $clflags_lib_release
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $out_dir\ctable.lib: lib $build_dir\release\ctable\src\border_config.obj $build_dir\release\ctable\src\box_config.obj $build_dir\release\ctable\src\cell.obj $build_dir\release\ctable\src\cell_renderer.obj $build_dir\release\ctable\src\column_sizer.obj $build_dir\release\ctable\src\pch.obj $build_dir\release\ctable\src\row.obj $build_dir\release\ctable\src\row_renderer.obj $build_dir\release\ctable\src\row_sizer.obj $build_dir\release\ctable\src\table.obj $build_dir\release\ctable\src\table_renderer.obj $build_dir\release\ctable\src\table_sizer.obj $build_dir\release\ctable\src\text_renderer.obj || init!
   out_file = ctable.lib
   flags = $libflags_release
   extra = 
build ctable!: phony $out_dir\ctable.lib
build ctable-full!: phony ctable! ctable-debug!

build $build_dir\debug\ctable-test\test\test_ct_border_config.obj: cl modules\ctable\test\test_ct_border_config.cpp || init!
   pdb = $build_dir\ctable-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /I"modules\ctable\include"

build $build_dir\debug\ctable-test\test\test_main.obj: cl modules\ctable\test\test_main.cpp || init!
   pdb = $build_dir\ctable-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /I"modules\ctable\include"

build $build_dir\ctable-test-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\ctable-test-debug.icon.res: rc $build_dir\ctable-test-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\ctable-test-debug.exe | $out_dir\ctable-test-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\testing-debug.lib $build_dir\debug\ctable-test\test\test_ct_border_config.obj $build_dir\debug\ctable-test\test\test_main.obj $build_dir\ctable-test-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = ctable-test-debug.exe
   pdb = $out_dir\ctable-test-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\ctable-test-debug.pdb!: pdb $out_dir\ctable-test-debug.pdb
build $stage_dir\ctable-test-debug.exe: cp $out_dir\ctable-test-debug.exe
build ctable-test-debug!: phony $out_dir\ctable-test-debug.exe $stage_dir\ctable-test-debug.exe

build $build_dir\release\ctable-test\test\test_ct_border_config.obj: cl modules\ctable\test\test_ct_border_config.cpp || init!
   pdb = $build_dir\ctable-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /I"modules\ctable\include"

build $build_dir\release\ctable-test\test\test_main.obj: cl modules\ctable\test\test_main.cpp || init!
   pdb = $build_dir\ctable-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /I"modules\ctable\include"

build $build_dir\ctable-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\ctable-test.icon.res: rc $build_dir\ctable-test.icon.rc || init!
   extra = /i"./"

build $out_dir\ctable-test.exe | $out_dir\ctable-test.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\testing.lib $build_dir\release\ctable-test\test\test_ct_border_config.obj $build_dir\release\ctable-test\test\test_main.obj $build_dir\ctable-test.icon.res $build_dir\default.manifest.res || init!
   out_file = ctable-test.exe
   pdb = $out_dir\ctable-test.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\ctable-test.pdb!: pdb $out_dir\ctable-test.pdb
build $stage_dir\ctable-test.exe: cp $out_dir\ctable-test.exe
build ctable-test!: phony $out_dir\ctable-test.exe $stage_dir\ctable-test.exe
build ctable-test-full!: phony ctable-test! ctable-test-debug!

build modules\luablt\src\blt.cpp!: limp | modules\luablt\meta\blt.lua || init!
   path = modules\luablt\src\blt.cpp
   extra = -f

build modules\luablt\src\blt.cpp: limp | modules\luablt\meta\blt.lua || init!
   path = modules\luablt\src\blt.cpp
   extra = -f

build $build_dir\debug\luablt\src\blt.obj: cl modules\luablt\src\blt.cpp || init!
   pdb = $build_dir\luablt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUABLT_IMPL /DBE_TARGET=luablt /DBE_TARGET_BASE=luablt /I"modules\luablt\include"

build $build_dir\debug\luablt\src\blt_debug.obj: cl modules\luablt\src\blt_debug.cpp || init!
   pdb = $build_dir\luablt-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUABLT_IMPL /DBE_TARGET=luablt /DBE_TARGET_BASE=luablt /I"modules\luablt\include"

build $out_dir\luablt-debug.lib: lib $build_dir\debug\luablt\src\blt.obj $build_dir\debug\luablt\src\blt_debug.obj || init!
   out_file = luablt-debug.lib
   flags = $libflags_debug
   extra = 
build luablt-debug!: phony $out_dir\luablt-debug.lib

build $build_dir\release\luablt\src\blt.obj: cl modules\luablt\src\blt.cpp || init!
   pdb = $build_dir\luablt.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUABLT_IMPL /DBE_TARGET=luablt /DBE_TARGET_BASE=luablt /I"modules\luablt\include"

build $build_dir\release\luablt\src\blt_debug.obj: cl modules\luablt\src\blt_debug.cpp || init!
   pdb = $build_dir\luablt.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUABLT_IMPL /DBE_TARGET=luablt /DBE_TARGET_BASE=luablt /I"modules\luablt\include"

build $out_dir\luablt.lib: lib $build_dir\release\luablt\src\blt.obj $build_dir\release\luablt\src\blt_debug.obj || init!
   out_file = luablt.lib
   flags = $libflags_release
   extra = 
build luablt!: phony $out_dir\luablt.lib
build luablt-full!: phony luablt! luablt-debug!

build $build_dir\debug\luacore\src\context.obj: cl modules\luacore\src\context.cpp || init!
   pdb = $build_dir\luacore-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\debug\luacore\src\id.obj: cl modules\luacore\src\id.cpp || init!
   pdb = $build_dir\luacore-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\debug\luacore\src\logging.obj: cl modules\luacore\src\logging.cpp || init!
   pdb = $build_dir\luacore-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\debug\luacore\src\lua_exception.obj: cl modules\luacore\src\lua_exception.cpp || init!
   pdb = $build_dir\luacore-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\debug\luacore\src\open_module.obj: cl modules\luacore\src\open_module.cpp || init!
   pdb = $build_dir\luacore-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $out_dir\luacore-debug.lib: lib $build_dir\debug\luacore\src\context.obj $build_dir\debug\luacore\src\id.obj $build_dir\debug\luacore\src\logging.obj $build_dir\debug\luacore\src\lua_exception.obj $build_dir\debug\luacore\src\open_module.obj || init!
   out_file = luacore-debug.lib
   flags = $libflags_debug
   extra = 
build luacore-debug!: phony $out_dir\luacore-debug.lib

build $build_dir\release\luacore\src\context.obj: cl modules\luacore\src\context.cpp || init!
   pdb = $build_dir\luacore.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\release\luacore\src\id.obj: cl modules\luacore\src\id.cpp || init!
   pdb = $build_dir\luacore.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\release\luacore\src\logging.obj: cl modules\luacore\src\logging.cpp || init!
   pdb = $build_dir\luacore.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\release\luacore\src\lua_exception.obj: cl modules\luacore\src\lua_exception.cpp || init!
   pdb = $build_dir\luacore.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $build_dir\release\luacore\src\open_module.obj: cl modules\luacore\src\open_module.cpp || init!
   pdb = $build_dir\luacore.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUACORE_IMPL /DBE_TARGET=luacore /DBE_TARGET_BASE=luacore /I"modules\luacore\include"

build $out_dir\luacore.lib: lib $build_dir\release\luacore\src\context.obj $build_dir\release\luacore\src\id.obj $build_dir\release\luacore\src\logging.obj $build_dir\release\luacore\src\lua_exception.obj $build_dir\release\luacore\src\open_module.obj || init!
   out_file = luacore.lib
   flags = $libflags_release
   extra = 
build luacore!: phony $out_dir\luacore.lib
build luacore-full!: phony luacore! luacore-debug!

build $build_dir\debug\luautil\src\fnv256.obj: cl modules\luautil\src\fnv256.cpp || init!
   pdb = $build_dir\luautil-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUAUTIL_IMPL /DBE_TARGET=luautil /DBE_TARGET_BASE=luautil /I"modules\luautil\include"

build $build_dir\debug\luautil\src\fs.obj: cl modules\luautil\src\fs.cpp || init!
   pdb = $build_dir\luautil-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUAUTIL_IMPL /DBE_TARGET=luautil /DBE_TARGET_BASE=luautil /I"modules\luautil\include"

build $build_dir\debug\luautil\src\util.obj: cl modules\luautil\src\util.cpp || init!
   pdb = $build_dir\luautil-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_LUAUTIL_IMPL /DBE_TARGET=luautil /DBE_TARGET_BASE=luautil /I"modules\luautil\include"

build $out_dir\luautil-debug.lib: lib $build_dir\debug\luautil\src\fnv256.obj $build_dir\debug\luautil\src\fs.obj $build_dir\debug\luautil\src\util.obj || init!
   out_file = luautil-debug.lib
   flags = $libflags_debug
   extra = 
build luautil-debug!: phony $out_dir\luautil-debug.lib

build $build_dir\release\luautil\src\fnv256.obj: cl modules\luautil\src\fnv256.cpp || init!
   pdb = $build_dir\luautil.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUAUTIL_IMPL /DBE_TARGET=luautil /DBE_TARGET_BASE=luautil /I"modules\luautil\include"

build $build_dir\release\luautil\src\fs.obj: cl modules\luautil\src\fs.cpp || init!
   pdb = $build_dir\luautil.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUAUTIL_IMPL /DBE_TARGET=luautil /DBE_TARGET_BASE=luautil /I"modules\luautil\include"

build $build_dir\release\luautil\src\util.obj: cl modules\luautil\src\util.cpp || init!
   pdb = $build_dir\luautil.pdb
   flags = $clflags_lib_release
   extra = /DBE_LUAUTIL_IMPL /DBE_TARGET=luautil /DBE_TARGET_BASE=luautil /I"modules\luautil\include"

build $out_dir\luautil.lib: lib $build_dir\release\luautil\src\fnv256.obj $build_dir\release\luautil\src\fs.obj $build_dir\release\luautil\src\util.obj || init!
   out_file = luautil.lib
   flags = $libflags_release
   extra = 
build luautil!: phony $out_dir\luautil.lib
build luautil-full!: phony luautil! luautil-debug!

build $build_dir\debug\perf\src\pch.obj: cl modules\perf\src\pch.cpp || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yc"pch.hpp"
build $build_dir\perf-debug.pch: phony $build_dir\debug\perf\src\pch.obj

build $build_dir\debug\perf\src\counter.obj: cl modules\perf\src\counter.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\counter_stat.obj: cl modules\perf\src\counter_stat.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\counter_stats.obj: cl modules\perf\src\counter_stats.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\event.obj: cl modules\perf\src\event.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\event_stat.obj: cl modules\perf\src\event_stat.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\event_stats.obj: cl modules\perf\src\event_stats.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\service_stats.obj: cl modules\perf\src\service_stats.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\stats.obj: cl modules\perf\src\stats.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\timer.obj: cl modules\perf\src\timer.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\timer_stat.obj: cl modules\perf\src\timer_stat.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\perf\src\timer_stats.obj: cl modules\perf\src\timer_stats.cpp | $build_dir\perf-debug.pch || init!
   pdb = $build_dir\perf-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf-debug.pch" /Yu"pch.hpp"

build $out_dir\perf-debug.lib: lib $build_dir\debug\perf\src\counter.obj $build_dir\debug\perf\src\counter_stat.obj $build_dir\debug\perf\src\counter_stats.obj $build_dir\debug\perf\src\event.obj $build_dir\debug\perf\src\event_stat.obj $build_dir\debug\perf\src\event_stats.obj $build_dir\debug\perf\src\pch.obj $build_dir\debug\perf\src\service_stats.obj $build_dir\debug\perf\src\stats.obj $build_dir\debug\perf\src\timer.obj $build_dir\debug\perf\src\timer_stat.obj $build_dir\debug\perf\src\timer_stats.obj || init!
   out_file = perf-debug.lib
   flags = $libflags_debug
   extra = 
build perf-debug!: phony $out_dir\perf-debug.lib

build $build_dir\release\perf\src\pch.obj: cl modules\perf\src\pch.cpp || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yc"pch.hpp"
build $build_dir\perf.pch: phony $build_dir\release\perf\src\pch.obj

build $build_dir\release\perf\src\counter.obj: cl modules\perf\src\counter.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\counter_stat.obj: cl modules\perf\src\counter_stat.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\counter_stats.obj: cl modules\perf\src\counter_stats.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\event.obj: cl modules\perf\src\event.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\event_stat.obj: cl modules\perf\src\event_stat.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\event_stats.obj: cl modules\perf\src\event_stats.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\service_stats.obj: cl modules\perf\src\service_stats.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\stats.obj: cl modules\perf\src\stats.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\timer.obj: cl modules\perf\src\timer.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\timer_stat.obj: cl modules\perf\src\timer_stat.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\timer_stats.obj: cl modules\perf\src\timer_stats.cpp | $build_dir\perf.pch || init!
   pdb = $build_dir\perf.pdb
   flags = $clflags_lib_release
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $out_dir\perf.lib: lib $build_dir\release\perf\src\counter.obj $build_dir\release\perf\src\counter_stat.obj $build_dir\release\perf\src\counter_stats.obj $build_dir\release\perf\src\event.obj $build_dir\release\perf\src\event_stat.obj $build_dir\release\perf\src\event_stats.obj $build_dir\release\perf\src\pch.obj $build_dir\release\perf\src\service_stats.obj $build_dir\release\perf\src\stats.obj $build_dir\release\perf\src\timer.obj $build_dir\release\perf\src\timer_stat.obj $build_dir\release\perf\src\timer_stats.obj || init!
   out_file = perf.lib
   flags = $libflags_release
   extra = 
build perf!: phony $out_dir\perf.lib
build perf-full!: phony perf! perf-debug!

build $build_dir\debug\platform\src\pch.obj: cl modules\platform\src\pch.cpp || init!
   pdb = $build_dir\platform-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /I"modules\platform\include" /Fp"$build_dir\platform-debug.pch" /Yc"pch.hpp"
build $build_dir\platform-debug.pch: phony $build_dir\debug\platform\src\pch.obj

build $build_dir\debug\platform\src\ids.obj: cl modules\platform\src\ids.cpp | $build_dir\platform-debug.pch || init!
   pdb = $build_dir\platform-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /I"modules\platform\include" /Fp"$build_dir\platform-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\platform\src\native\vc_win\lifecycle.obj: cl modules\platform\src\native\vc_win\lifecycle.cpp | $build_dir\platform-debug.pch || init!
   pdb = $build_dir\platform-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /I"modules\platform\include" /Fp"$build_dir\platform-debug.pch" /Yu"pch.hpp"

build $out_dir\platform-debug.lib: lib $build_dir\debug\platform\src\ids.obj $build_dir\debug\platform\src\native\vc_win\lifecycle.obj $build_dir\debug\platform\src\pch.obj || init!
   out_file = platform-debug.lib
   flags = $libflags_debug
   extra = 
build platform-debug!: phony $out_dir\platform-debug.lib

build $build_dir\release\platform\src\pch.obj: cl modules\platform\src\pch.cpp || init!
   pdb = $build_dir\platform.pdb
   flags = $clflags_lib_release
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /I"modules\platform\include" /Fp"$build_dir\platform.pch" /Yc"pch.hpp"
build $build_dir\platform.pch: phony $build_dir\release\platform\src\pch.obj

build $build_dir\release\platform\src\ids.obj: cl modules\platform\src\ids.cpp | $build_dir\platform.pch || init!
   pdb = $build_dir\platform.pdb
   flags = $clflags_lib_release
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /I"modules\platform\include" /Fp"$build_dir\platform.pch" /Yu"pch.hpp"

build $build_dir\release\platform\src\native\vc_win\lifecycle.obj: cl modules\platform\src\native\vc_win\lifecycle.cpp | $build_dir\platform.pch || init!
   pdb = $build_dir\platform.pdb
   flags = $clflags_lib_release
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /I"modules\platform\include" /Fp"$build_dir\platform.pch" /Yu"pch.hpp"

build $out_dir\platform.lib: lib $build_dir\release\platform\src\ids.obj $build_dir\release\platform\src\native\vc_win\lifecycle.obj $build_dir\release\platform\src\pch.obj || init!
   out_file = platform.lib
   flags = $libflags_release
   extra = 
build platform!: phony $out_dir\platform.lib
build platform-full!: phony platform! platform-debug!

build modules\sqlite\include\transaction_type.hpp!: limp | modules\sqlite\meta\transaction_type.lua modules\sqlite\meta\transaction_type_hpp.blt || init!
   path = modules\sqlite\include\transaction_type.hpp
   extra = -f

build modules\sqlite\include\transaction_type.hpp: limp | modules\sqlite\meta\transaction_type.lua modules\sqlite\meta\transaction_type_hpp.blt || init!
   path = modules\sqlite\include\transaction_type.hpp
   extra = -f

build modules\sqlite\src\transaction_type.cpp!: limp | modules\sqlite\meta\transaction_type.lua modules\sqlite\meta\transaction_type_cpp.blt || init!
   path = modules\sqlite\src\transaction_type.cpp
   extra = -f

build modules\sqlite\src\transaction_type.cpp: limp | modules\sqlite\meta\transaction_type.lua modules\sqlite\meta\transaction_type_cpp.blt || init!
   path = modules\sqlite\src\transaction_type.cpp
   extra = -f

build modules\sqlite\include\result_type.hpp!: limp | modules\sqlite\meta\result_type.lua modules\sqlite\meta\result_type_hpp.blt || init!
   path = modules\sqlite\include\result_type.hpp
   extra = -f

build modules\sqlite\include\result_type.hpp: limp | modules\sqlite\meta\result_type.lua modules\sqlite\meta\result_type_hpp.blt || init!
   path = modules\sqlite\include\result_type.hpp
   extra = -f

build modules\sqlite\src\result_type.cpp!: limp | modules\sqlite\meta\result_type.lua modules\sqlite\meta\result_type_cpp.blt || init!
   path = modules\sqlite\src\result_type.cpp
   extra = -f

build modules\sqlite\src\result_type.cpp: limp | modules\sqlite\meta\result_type.lua modules\sqlite\meta\result_type_cpp.blt || init!
   path = modules\sqlite\src\result_type.cpp
   extra = -f

build $build_dir\debug\sqlite\src\sqlite.obj: cl modules\sqlite\src\sqlite.c || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\debug\sqlite\src\pch.obj: cl modules\sqlite\src\pch.cpp || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yc"pch.hpp"
build $build_dir\sqlite-debug.pch: phony $build_dir\debug\sqlite\src\pch.obj

build $build_dir\debug\sqlite\src\db.obj: cl modules\sqlite\src\db.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\exceptions.obj: cl modules\sqlite\src\exceptions.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\queries.obj: cl modules\sqlite\src\queries.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\result_type.obj: cl modules\sqlite\src\result_type.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\shared_stmt_cache.obj: cl modules\sqlite\src\shared_stmt_cache.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\static_stmt_cache.obj: cl modules\sqlite\src\static_stmt_cache.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\stmt.obj: cl modules\sqlite\src\stmt.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\stmt_base.obj: cl modules\sqlite\src\stmt_base.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\stmt_cache.obj: cl modules\sqlite\src\stmt_cache.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\stmt_proxy.obj: cl modules\sqlite\src\stmt_proxy.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\transaction.obj: cl modules\sqlite\src\transaction.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\sqlite\src\transaction_type.obj: cl modules\sqlite\src\transaction_type.cpp | $build_dir\sqlite-debug.pch || init!
   pdb = $build_dir\sqlite-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite-debug.pch" /Yu"pch.hpp"

build $out_dir\sqlite-debug.lib: lib $build_dir\debug\sqlite\src\sqlite.obj $build_dir\debug\sqlite\src\db.obj $build_dir\debug\sqlite\src\exceptions.obj $build_dir\debug\sqlite\src\pch.obj $build_dir\debug\sqlite\src\queries.obj $build_dir\debug\sqlite\src\result_type.obj $build_dir\debug\sqlite\src\shared_stmt_cache.obj $build_dir\debug\sqlite\src\static_stmt_cache.obj $build_dir\debug\sqlite\src\stmt.obj $build_dir\debug\sqlite\src\stmt_base.obj $build_dir\debug\sqlite\src\stmt_cache.obj $build_dir\debug\sqlite\src\stmt_proxy.obj $build_dir\debug\sqlite\src\transaction.obj $build_dir\debug\sqlite\src\transaction_type.obj || init!
   out_file = sqlite-debug.lib
   flags = $libflags_debug
   extra = 
build sqlite-debug!: phony $out_dir\sqlite-debug.lib

build $build_dir\release\sqlite\src\sqlite.obj: cl modules\sqlite\src\sqlite.c || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\release\sqlite\src\pch.obj: cl modules\sqlite\src\pch.cpp || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yc"pch.hpp"
build $build_dir\sqlite.pch: phony $build_dir\release\sqlite\src\pch.obj

build $build_dir\release\sqlite\src\db.obj: cl modules\sqlite\src\db.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\exceptions.obj: cl modules\sqlite\src\exceptions.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\queries.obj: cl modules\sqlite\src\queries.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\result_type.obj: cl modules\sqlite\src\result_type.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\shared_stmt_cache.obj: cl modules\sqlite\src\shared_stmt_cache.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\static_stmt_cache.obj: cl modules\sqlite\src\static_stmt_cache.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt.obj: cl modules\sqlite\src\stmt.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt_base.obj: cl modules\sqlite\src\stmt_base.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt_cache.obj: cl modules\sqlite\src\stmt_cache.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt_proxy.obj: cl modules\sqlite\src\stmt_proxy.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\transaction.obj: cl modules\sqlite\src\transaction.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\transaction_type.obj: cl modules\sqlite\src\transaction_type.cpp | $build_dir\sqlite.pch || init!
   pdb = $build_dir\sqlite.pdb
   flags = $clflags_lib_release
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $out_dir\sqlite.lib: lib $build_dir\release\sqlite\src\sqlite.obj $build_dir\release\sqlite\src\db.obj $build_dir\release\sqlite\src\exceptions.obj $build_dir\release\sqlite\src\pch.obj $build_dir\release\sqlite\src\queries.obj $build_dir\release\sqlite\src\result_type.obj $build_dir\release\sqlite\src\shared_stmt_cache.obj $build_dir\release\sqlite\src\static_stmt_cache.obj $build_dir\release\sqlite\src\stmt.obj $build_dir\release\sqlite\src\stmt_base.obj $build_dir\release\sqlite\src\stmt_cache.obj $build_dir\release\sqlite\src\stmt_proxy.obj $build_dir\release\sqlite\src\transaction.obj $build_dir\release\sqlite\src\transaction_type.obj || init!
   out_file = sqlite.lib
   flags = $libflags_release
   extra = 
build sqlite!: phony $out_dir\sqlite.lib
build sqlite-full!: phony sqlite! sqlite-debug!

build $build_dir\debug\sqlite-test\test\test_db.obj: cl modules\sqlite\test\test_db.cpp || init!
   pdb = $build_dir\sqlite-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\debug\sqlite-test\test\test_main.obj: cl modules\sqlite\test\test_main.cpp || init!
   pdb = $build_dir\sqlite-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\debug\sqlite-test\test\test_shared_stmt_cache.obj: cl modules\sqlite\test\test_shared_stmt_cache.cpp || init!
   pdb = $build_dir\sqlite-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\debug\sqlite-test\test\test_static_stmt_cache.obj: cl modules\sqlite\test\test_static_stmt_cache.cpp || init!
   pdb = $build_dir\sqlite-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\debug\sqlite-test\test\test_stmt.obj: cl modules\sqlite\test\test_stmt.cpp || init!
   pdb = $build_dir\sqlite-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\debug\sqlite-test\test\test_transaction.obj: cl modules\sqlite\test\test_transaction.cpp || init!
   pdb = $build_dir\sqlite-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\sqlite-test-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\sqlite-test-debug.icon.res: rc $build_dir\sqlite-test-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\sqlite-test-debug.exe | $out_dir\sqlite-test-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\sqlite-debug.lib $out_dir\testing-debug.lib $build_dir\debug\sqlite-test\test\test_db.obj $build_dir\debug\sqlite-test\test\test_main.obj $build_dir\debug\sqlite-test\test\test_shared_stmt_cache.obj $build_dir\debug\sqlite-test\test\test_static_stmt_cache.obj $build_dir\debug\sqlite-test\test\test_stmt.obj $build_dir\debug\sqlite-test\test\test_transaction.obj $build_dir\sqlite-test-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = sqlite-test-debug.exe
   pdb = $out_dir\sqlite-test-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\sqlite-test-debug.pdb!: pdb $out_dir\sqlite-test-debug.pdb
build $stage_dir\sqlite-test-debug.exe: cp $out_dir\sqlite-test-debug.exe
build sqlite-test-debug!: phony $out_dir\sqlite-test-debug.exe $stage_dir\sqlite-test-debug.exe

build $build_dir\release\sqlite-test\test\test_db.obj: cl modules\sqlite\test\test_db.cpp || init!
   pdb = $build_dir\sqlite-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_main.obj: cl modules\sqlite\test\test_main.cpp || init!
   pdb = $build_dir\sqlite-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_shared_stmt_cache.obj: cl modules\sqlite\test\test_shared_stmt_cache.cpp || init!
   pdb = $build_dir\sqlite-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_static_stmt_cache.obj: cl modules\sqlite\test\test_static_stmt_cache.cpp || init!
   pdb = $build_dir\sqlite-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_stmt.obj: cl modules\sqlite\test\test_stmt.cpp || init!
   pdb = $build_dir\sqlite-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_transaction.obj: cl modules\sqlite\test\test_transaction.cpp || init!
   pdb = $build_dir\sqlite-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /I"modules\sqlite\include"

build $build_dir\sqlite-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\sqlite-test.icon.res: rc $build_dir\sqlite-test.icon.rc || init!
   extra = /i"./"

build $out_dir\sqlite-test.exe | $out_dir\sqlite-test.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\sqlite.lib $out_dir\testing.lib $build_dir\release\sqlite-test\test\test_db.obj $build_dir\release\sqlite-test\test\test_main.obj $build_dir\release\sqlite-test\test\test_shared_stmt_cache.obj $build_dir\release\sqlite-test\test\test_static_stmt_cache.obj $build_dir\release\sqlite-test\test\test_stmt.obj $build_dir\release\sqlite-test\test\test_transaction.obj $build_dir\sqlite-test.icon.res $build_dir\default.manifest.res || init!
   out_file = sqlite-test.exe
   pdb = $out_dir\sqlite-test.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\sqlite-test.pdb!: pdb $out_dir\sqlite-test.pdb
build $stage_dir\sqlite-test.exe: cp $out_dir\sqlite-test.exe
build sqlite-test!: phony $out_dir\sqlite-test.exe $stage_dir\sqlite-test.exe
build sqlite-test-full!: phony sqlite-test! sqlite-test-debug!

build $build_dir\debug\testing\src\pch.obj: cl modules\testing\src\pch.cpp || init!
   pdb = $build_dir\testing-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=testing /DBE_TARGET_BASE=testing /DBE_TESTING_IMPL /I"modules\testing\include" /Fp"$build_dir\testing-debug.pch" /Yc"pch.hpp"
build $build_dir\testing-debug.pch: phony $build_dir\debug\testing\src\pch.obj

build $out_dir\testing-debug.lib: lib $build_dir\debug\testing\src\pch.obj || init!
   out_file = testing-debug.lib
   flags = $libflags_debug
   extra = 
build testing-debug!: phony $out_dir\testing-debug.lib

build $build_dir\release\testing\src\pch.obj: cl modules\testing\src\pch.cpp || init!
   pdb = $build_dir\testing.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=testing /DBE_TARGET_BASE=testing /DBE_TESTING_IMPL /I"modules\testing\include" /Fp"$build_dir\testing.pch" /Yc"pch.hpp"
build $build_dir\testing.pch: phony $build_dir\release\testing\src\pch.obj

build $out_dir\testing.lib: lib $build_dir\release\testing\src\pch.obj || init!
   out_file = testing.lib
   flags = $libflags_release
   extra = 
build testing!: phony $out_dir\testing.lib
build testing-full!: phony testing! testing-debug!

build $build_dir\debug\testing-test\test\test_arbitrary.obj: cl modules\testing\test\test_arbitrary.cpp || init!
   pdb = $build_dir\testing-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /I"modules\testing\include"

build $build_dir\debug\testing-test\test\test_main.obj: cl modules\testing\test\test_main.cpp || init!
   pdb = $build_dir\testing-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /I"modules\testing\include"

build $build_dir\testing-test-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\testing-test-debug.icon.res: rc $build_dir\testing-test-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\testing-test-debug.exe | $out_dir\testing-test-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\testing-debug.lib $out_dir\util-debug.lib $build_dir\debug\testing-test\test\test_arbitrary.obj $build_dir\debug\testing-test\test\test_main.obj $build_dir\testing-test-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = testing-test-debug.exe
   pdb = $out_dir\testing-test-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\testing-test-debug.pdb!: pdb $out_dir\testing-test-debug.pdb
build $stage_dir\testing-test-debug.exe: cp $out_dir\testing-test-debug.exe
build testing-test-debug!: phony $out_dir\testing-test-debug.exe $stage_dir\testing-test-debug.exe

build $build_dir\release\testing-test\test\test_arbitrary.obj: cl modules\testing\test\test_arbitrary.cpp || init!
   pdb = $build_dir\testing-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /I"modules\testing\include"

build $build_dir\release\testing-test\test\test_main.obj: cl modules\testing\test\test_main.cpp || init!
   pdb = $build_dir\testing-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /I"modules\testing\include"

build $build_dir\testing-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\testing-test.icon.res: rc $build_dir\testing-test.icon.rc || init!
   extra = /i"./"

build $out_dir\testing-test.exe | $out_dir\testing-test.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\testing.lib $out_dir\util.lib $build_dir\release\testing-test\test\test_arbitrary.obj $build_dir\release\testing-test\test\test_main.obj $build_dir\testing-test.icon.res $build_dir\default.manifest.res || init!
   out_file = testing-test.exe
   pdb = $out_dir\testing-test.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\testing-test.pdb!: pdb $out_dir\testing-test.pdb
build $stage_dir\testing-test.exe: cp $out_dir\testing-test.exe
build testing-test!: phony $out_dir\testing-test.exe $stage_dir\testing-test.exe
build testing-test-full!: phony testing-test! testing-test-debug!

build $build_dir\debug\util\src\pch.obj: cl modules\util\src\pch.cpp || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yc"pch.hpp"
build $build_dir\util-debug.pch: phony $build_dir\debug\util\src\pch.obj

build $build_dir\debug\util\src\binary_units.obj: cl modules\util\src\binary_units.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\files.obj: cl modules\util\src\files.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\fnv.obj: cl modules\util\src\fnv.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\ids.obj: cl modules\util\src\ids.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\native\vc_win\paths.obj: cl modules\util\src\native\vc_win\paths.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\path_glob.obj: cl modules\util\src\path_glob.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\paths.obj: cl modules\util\src\paths.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\pointer_to_string.obj: cl modules\util\src\pointer_to_string.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\service_split_mix_64.obj: cl modules\util\src\service_split_mix_64.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\service_xoroshiro_128_plus.obj: cl modules\util\src\service_xoroshiro_128_plus.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\service_xorshift_1024_star.obj: cl modules\util\src\service_xorshift_1024_star.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\service_xorshift_128_plus.obj: cl modules\util\src\service_xorshift_128_plus.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\utf8_codepoint.obj: cl modules\util\src\utf8_codepoint.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $build_dir\debug\util\src\utf8_iterator.obj: cl modules\util\src\utf8_iterator.cpp | $build_dir\util-debug.pch || init!
   pdb = $build_dir\util-debug.pdb
   flags = $clflags_lib_debug
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util-debug.pch" /Yu"pch.hpp"

build $out_dir\util-debug.lib: lib $build_dir\debug\util\src\binary_units.obj $build_dir\debug\util\src\files.obj $build_dir\debug\util\src\fnv.obj $build_dir\debug\util\src\ids.obj $build_dir\debug\util\src\native\vc_win\paths.obj $build_dir\debug\util\src\path_glob.obj $build_dir\debug\util\src\paths.obj $build_dir\debug\util\src\pch.obj $build_dir\debug\util\src\pointer_to_string.obj $build_dir\debug\util\src\service_split_mix_64.obj $build_dir\debug\util\src\service_xoroshiro_128_plus.obj $build_dir\debug\util\src\service_xorshift_1024_star.obj $build_dir\debug\util\src\service_xorshift_128_plus.obj $build_dir\debug\util\src\utf8_codepoint.obj $build_dir\debug\util\src\utf8_iterator.obj || init!
   out_file = util-debug.lib
   flags = $libflags_debug
   extra = 
build util-debug!: phony $out_dir\util-debug.lib

build $build_dir\release\util\src\pch.obj: cl modules\util\src\pch.cpp || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yc"pch.hpp"
build $build_dir\util.pch: phony $build_dir\release\util\src\pch.obj

build $build_dir\release\util\src\binary_units.obj: cl modules\util\src\binary_units.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\files.obj: cl modules\util\src\files.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\fnv.obj: cl modules\util\src\fnv.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\ids.obj: cl modules\util\src\ids.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\native\vc_win\paths.obj: cl modules\util\src\native\vc_win\paths.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\path_glob.obj: cl modules\util\src\path_glob.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\paths.obj: cl modules\util\src\paths.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\pointer_to_string.obj: cl modules\util\src\pointer_to_string.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\service_split_mix_64.obj: cl modules\util\src\service_split_mix_64.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\service_xoroshiro_128_plus.obj: cl modules\util\src\service_xoroshiro_128_plus.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\service_xorshift_1024_star.obj: cl modules\util\src\service_xorshift_1024_star.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\service_xorshift_128_plus.obj: cl modules\util\src\service_xorshift_128_plus.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\utf8_codepoint.obj: cl modules\util\src\utf8_codepoint.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $build_dir\release\util\src\utf8_iterator.obj: cl modules\util\src\utf8_iterator.cpp | $build_dir\util.pch || init!
   pdb = $build_dir\util.pdb
   flags = $clflags_lib_release
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $out_dir\util.lib: lib $build_dir\release\util\src\binary_units.obj $build_dir\release\util\src\files.obj $build_dir\release\util\src\fnv.obj $build_dir\release\util\src\ids.obj $build_dir\release\util\src\native\vc_win\paths.obj $build_dir\release\util\src\path_glob.obj $build_dir\release\util\src\paths.obj $build_dir\release\util\src\pch.obj $build_dir\release\util\src\pointer_to_string.obj $build_dir\release\util\src\service_split_mix_64.obj $build_dir\release\util\src\service_xoroshiro_128_plus.obj $build_dir\release\util\src\service_xorshift_1024_star.obj $build_dir\release\util\src\service_xorshift_128_plus.obj $build_dir\release\util\src\utf8_codepoint.obj $build_dir\release\util\src\utf8_iterator.obj || init!
   out_file = util.lib
   flags = $libflags_release
   extra = 
build util!: phony $out_dir\util.lib
build util-full!: phony util! util-debug!

build $build_dir\debug\util-test\test\test_binary_units.obj: cl modules\util\test\test_binary_units.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_chunked_list.obj: cl modules\util\test\test_chunked_list.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_main.obj: cl modules\util\test\test_main.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_split_mix_64.obj: cl modules\util\test\test_split_mix_64.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_utf8_iterator.obj: cl modules\util\test\test_utf8_iterator.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_xoroshiro_128_plus.obj: cl modules\util\test\test_xoroshiro_128_plus.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_xorshift_1024_star.obj: cl modules\util\test\test_xorshift_1024_star.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-test\test\test_xorshift_128_plus.obj: cl modules\util\test\test_xorshift_128_plus.cpp || init!
   pdb = $build_dir\util-test-debug.pdb
   flags = $clflags_test_debug
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\util-test-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\util-test-debug.icon.res: rc $build_dir\util-test-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\util-test-debug.exe | $out_dir\util-test-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\testing-debug.lib $out_dir\util-debug.lib $build_dir\debug\util-test\test\test_binary_units.obj $build_dir\debug\util-test\test\test_chunked_list.obj $build_dir\debug\util-test\test\test_main.obj $build_dir\debug\util-test\test\test_split_mix_64.obj $build_dir\debug\util-test\test\test_utf8_iterator.obj $build_dir\debug\util-test\test\test_xoroshiro_128_plus.obj $build_dir\debug\util-test\test\test_xorshift_1024_star.obj $build_dir\debug\util-test\test\test_xorshift_128_plus.obj $build_dir\util-test-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = util-test-debug.exe
   pdb = $out_dir\util-test-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\util-test-debug.pdb!: pdb $out_dir\util-test-debug.pdb
build $stage_dir\util-test-debug.exe: cp $out_dir\util-test-debug.exe
build util-test-debug!: phony $out_dir\util-test-debug.exe $stage_dir\util-test-debug.exe

build $build_dir\release\util-test\test\test_binary_units.obj: cl modules\util\test\test_binary_units.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_chunked_list.obj: cl modules\util\test\test_chunked_list.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_main.obj: cl modules\util\test\test_main.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_split_mix_64.obj: cl modules\util\test\test_split_mix_64.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_utf8_iterator.obj: cl modules\util\test\test_utf8_iterator.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_xoroshiro_128_plus.obj: cl modules\util\test\test_xoroshiro_128_plus.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_xorshift_1024_star.obj: cl modules\util\test\test_xorshift_1024_star.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-test\test\test_xorshift_128_plus.obj: cl modules\util\test\test_xorshift_128_plus.cpp || init!
   pdb = $build_dir\util-test.pdb
   flags = $clflags_test_release
   extra = /DBE_TARGET=util-test /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\util-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\util-test.icon.res: rc $build_dir\util-test.icon.rc || init!
   extra = /i"./"

build $out_dir\util-test.exe | $out_dir\util-test.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\testing.lib $out_dir\util.lib $build_dir\release\util-test\test\test_binary_units.obj $build_dir\release\util-test\test\test_chunked_list.obj $build_dir\release\util-test\test\test_main.obj $build_dir\release\util-test\test\test_split_mix_64.obj $build_dir\release\util-test\test\test_utf8_iterator.obj $build_dir\release\util-test\test\test_xoroshiro_128_plus.obj $build_dir\release\util-test\test\test_xorshift_1024_star.obj $build_dir\release\util-test\test\test_xorshift_128_plus.obj $build_dir\util-test.icon.res $build_dir\default.manifest.res || init!
   out_file = util-test.exe
   pdb = $out_dir\util-test.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\util-test.pdb!: pdb $out_dir\util-test.pdb
build $stage_dir\util-test.exe: cp $out_dir\util-test.exe
build util-test!: phony $out_dir\util-test.exe $stage_dir\util-test.exe
build util-test-full!: phony util-test! util-test-debug!

build $build_dir\debug\util-perf\perf\associative_containers.obj: cl modules\util\perf\associative_containers.cpp || init!
   pdb = $build_dir\util-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-perf\perf\perf_main.obj: cl modules\util\perf\perf_main.cpp || init!
   pdb = $build_dir\util-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\debug\util-perf\perf\sequence_containers.obj: cl modules\util\perf\sequence_containers.cpp || init!
   pdb = $build_dir\util-perf-debug.pdb
   flags = $clflags_perf_debug
   extra = /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\util-perf-debug.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\util-perf-debug.icon.res: rc $build_dir\util-perf-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\util-perf-debug.exe | $out_dir\util-perf-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\testing-debug.lib $out_dir\util-debug.lib $build_dir\debug\util-perf\perf\associative_containers.obj $build_dir\debug\util-perf\perf\perf_main.obj $build_dir\debug\util-perf\perf\sequence_containers.obj $build_dir\util-perf-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = util-perf-debug.exe
   pdb = $out_dir\util-perf-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\util-perf-debug.pdb!: pdb $out_dir\util-perf-debug.pdb
build $stage_dir\util-perf-debug.exe: cp $out_dir\util-perf-debug.exe
build util-perf-debug!: phony $out_dir\util-perf-debug.exe $stage_dir\util-perf-debug.exe

build $build_dir\release\util-perf\perf\associative_containers.obj: cl modules\util\perf\associative_containers.cpp || init!
   pdb = $build_dir\util-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-perf\perf\perf_main.obj: cl modules\util\perf\perf_main.cpp || init!
   pdb = $build_dir\util-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\release\util-perf\perf\sequence_containers.obj: cl modules\util\perf\sequence_containers.cpp || init!
   pdb = $build_dir\util-perf.pdb
   flags = $clflags_perf_release
   extra = /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /I"modules\util\include"

build $build_dir\util-perf.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"

build $build_dir\util-perf.icon.res: rc $build_dir\util-perf.icon.rc || init!
   extra = /i"./"

build $out_dir\util-perf.exe | $out_dir\util-perf.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\testing.lib $out_dir\util.lib $build_dir\release\util-perf\perf\associative_containers.obj $build_dir\release\util-perf\perf\perf_main.obj $build_dir\release\util-perf\perf\sequence_containers.obj $build_dir\util-perf.icon.res $build_dir\default.manifest.res || init!
   out_file = util-perf.exe
   pdb = $out_dir\util-perf.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\util-perf.pdb!: pdb $out_dir\util-perf.pdb
build $stage_dir\util-perf.exe: cp $out_dir\util-perf.exe
build util-perf!: phony $out_dir\util-perf.exe $stage_dir\util-perf.exe
build util-perf-full!: phony util-perf! util-perf-debug!

build tools\blinte\src\cxx_lexer.cpp: ragel tools\blinte\meta\cxx_lexer.rl
   flags = -s -C -L -G2

build $build_dir\debug\blinte\src\all_rules.obj: cl tools\blinte\src\all_rules.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\debug\blinte\src\blinte.obj: cl tools\blinte\src\blinte.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\debug\blinte\src\blinte_app.obj: cl tools\blinte\src\blinte_app.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\debug\blinte\src\cxx_lexer.obj: cl tools\blinte\src\cxx_lexer.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\debug\blinte\src\document.obj: cl tools\blinte\src\document.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\debug\blinte\src\token.obj: cl tools\blinte\src\token.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\debug\blinte\src\token_type.obj: cl tools\blinte\src\token_type.cpp || init!
   pdb = $build_dir\blinte-debug.pdb
   flags = $clflags_rtti_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\blinte-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\blinte-debug.icon.res: rc $build_dir\blinte-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\blinte-debug.exe | $out_dir\blinte-debug.pdb: link $out_dir\cli-debug.lib $out_dir\core-debug.lib $out_dir\core-id-with-names-debug.lib $out_dir\ctable-debug.lib $out_dir\util-debug.lib $build_dir\debug\blinte\src\all_rules.obj $build_dir\debug\blinte\src\blinte.obj $build_dir\debug\blinte\src\blinte_app.obj $build_dir\debug\blinte\src\cxx_lexer.obj $build_dir\debug\blinte\src\document.obj $build_dir\debug\blinte\src\token.obj $build_dir\debug\blinte\src\token_type.obj $build_dir\blinte-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = blinte-debug.exe
   pdb = $out_dir\blinte-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\blinte-debug.pdb!: pdb $out_dir\blinte-debug.pdb
build $stage_dir\blinte-debug.exe: cp $out_dir\blinte-debug.exe
build blinte-debug!: phony $out_dir\blinte-debug.exe $stage_dir\blinte-debug.exe

build $build_dir\release\blinte\src\all_rules.obj: cl tools\blinte\src\all_rules.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\release\blinte\src\blinte.obj: cl tools\blinte\src\blinte.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\release\blinte\src\blinte_app.obj: cl tools\blinte\src\blinte_app.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\release\blinte\src\cxx_lexer.obj: cl tools\blinte\src\cxx_lexer.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\release\blinte\src\document.obj: cl tools\blinte\src\document.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\release\blinte\src\token.obj: cl tools\blinte\src\token.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\release\blinte\src\token_type.obj: cl tools\blinte\src\token_type.cpp || init!
   pdb = $build_dir\blinte.pdb
   flags = $clflags_rtti_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=blinte /DBE_TARGET_BASE=blinte /I"tools\blinte\include"

build $build_dir\blinte.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\blinte.icon.res: rc $build_dir\blinte.icon.rc || init!
   extra = /i"./"

build $out_dir\blinte.exe | $out_dir\blinte.pdb: link $out_dir\cli.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\ctable.lib $out_dir\util.lib $build_dir\release\blinte\src\all_rules.obj $build_dir\release\blinte\src\blinte.obj $build_dir\release\blinte\src\blinte_app.obj $build_dir\release\blinte\src\cxx_lexer.obj $build_dir\release\blinte\src\document.obj $build_dir\release\blinte\src\token.obj $build_dir\release\blinte\src\token_type.obj $build_dir\blinte.icon.res $build_dir\default.manifest.res || init!
   out_file = blinte.exe
   pdb = $out_dir\blinte.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\blinte.pdb!: pdb $out_dir\blinte.pdb
build $stage_dir\blinte.exe: cp $out_dir\blinte.exe
build blinte!: phony $out_dir\blinte.exe $stage_dir\blinte.exe
build blinte-full!: phony blinte! blinte-debug!

build $build_dir\debug\bltc\src\bltc.obj: cl tools\bltc\src\bltc.cpp || init!
   pdb = $build_dir\bltc-debug.pdb
   flags = $clflags_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=bltc /DBE_TARGET_BASE=bltc /I"tools\bltc\include"

build $build_dir\debug\bltc\src\bltc_app.obj: cl tools\bltc\src\bltc_app.cpp || init!
   pdb = $build_dir\bltc-debug.pdb
   flags = $clflags_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=bltc /DBE_TARGET_BASE=bltc /I"tools\bltc\include"

build $build_dir\bltc-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\bltc-debug.icon.res: rc $build_dir\bltc-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\bltc-debug.exe | $out_dir\bltc-debug.pdb: link $out_dir\blt-debug.lib $out_dir\cli-debug.lib $out_dir\core-debug.lib $out_dir\core-id-with-names-debug.lib $out_dir\ctable-debug.lib $out_dir\util-debug.lib $build_dir\debug\bltc\src\bltc.obj $build_dir\debug\bltc\src\bltc_app.obj $build_dir\bltc-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = bltc-debug.exe
   pdb = $out_dir\bltc-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\bltc-debug.pdb!: pdb $out_dir\bltc-debug.pdb
build $stage_dir\bltc-debug.exe: cp $out_dir\bltc-debug.exe
build bltc-debug!: phony $out_dir\bltc-debug.exe $stage_dir\bltc-debug.exe

build $build_dir\release\bltc\src\bltc.obj: cl tools\bltc\src\bltc.cpp || init!
   pdb = $build_dir\bltc.pdb
   flags = $clflags_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=bltc /DBE_TARGET_BASE=bltc /I"tools\bltc\include"

build $build_dir\release\bltc\src\bltc_app.obj: cl tools\bltc\src\bltc_app.cpp || init!
   pdb = $build_dir\bltc.pdb
   flags = $clflags_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=bltc /DBE_TARGET_BASE=bltc /I"tools\bltc\include"

build $build_dir\bltc.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\bltc.icon.res: rc $build_dir\bltc.icon.rc || init!
   extra = /i"./"

build $out_dir\bltc.exe | $out_dir\bltc.pdb: link $out_dir\blt.lib $out_dir\cli.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\ctable.lib $out_dir\util.lib $build_dir\release\bltc\src\bltc.obj $build_dir\release\bltc\src\bltc_app.obj $build_dir\bltc.icon.res $build_dir\default.manifest.res || init!
   out_file = bltc.exe
   pdb = $out_dir\bltc.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\bltc.pdb!: pdb $out_dir\bltc.pdb
build $stage_dir\bltc.exe: cp $out_dir\bltc.exe
build bltc!: phony $out_dir\bltc.exe $stage_dir\bltc.exe
build bltc-full!: phony bltc! bltc-debug!

build $build_dir\debug\ccolor\src\ccolor.obj: cl tools\ccolor\src\ccolor.cpp || init!
   pdb = $build_dir\ccolor-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=ccolor /DBE_TARGET_BASE=ccolor /I"tools\ccolor\include"

build $build_dir\ccolor-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\ccolor-debug.icon.res: rc $build_dir\ccolor-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\ccolor-debug.exe | $out_dir\ccolor-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $build_dir\debug\ccolor\src\ccolor.obj $build_dir\ccolor-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = ccolor-debug.exe
   pdb = $out_dir\ccolor-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\ccolor-debug.pdb!: pdb $out_dir\ccolor-debug.pdb
build $stage_dir\ccolor-debug.exe: cp $out_dir\ccolor-debug.exe
build ccolor-debug!: phony $out_dir\ccolor-debug.exe $stage_dir\ccolor-debug.exe

build $build_dir\release\ccolor\src\ccolor.obj: cl tools\ccolor\src\ccolor.cpp || init!
   pdb = $build_dir\ccolor.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=ccolor /DBE_TARGET_BASE=ccolor /I"tools\ccolor\include"

build $build_dir\ccolor.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\ccolor.icon.res: rc $build_dir\ccolor.icon.rc || init!
   extra = /i"./"

build $out_dir\ccolor.exe | $out_dir\ccolor.pdb: link $out_dir\core-id.lib $out_dir\core.lib $build_dir\release\ccolor\src\ccolor.obj $build_dir\ccolor.icon.res $build_dir\default.manifest.res || init!
   out_file = ccolor.exe
   pdb = $out_dir\ccolor.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\ccolor.pdb!: pdb $out_dir\ccolor.pdb
build $stage_dir\ccolor.exe: cp $out_dir\ccolor.exe
build ccolor!: phony $out_dir\ccolor.exe $stage_dir\ccolor.exe
build ccolor-full!: phony ccolor! ccolor-debug!

build $build_dir\debug\idgen\src\idgen.obj: cl tools\idgen\src\idgen.cpp || init!
   pdb = $build_dir\idgen-debug.pdb
   flags = $clflags_debug
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=idgen /I"tools\idgen\include"

build $build_dir\idgen-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\idgen-debug.icon.res: rc $build_dir\idgen-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\idgen-debug.exe | $out_dir\idgen-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-with-names-debug.lib $build_dir\debug\idgen\src\idgen.obj $build_dir\idgen-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = idgen-debug.exe
   pdb = $out_dir\idgen-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\idgen-debug.pdb!: pdb $out_dir\idgen-debug.pdb
build $stage_dir\idgen-debug.exe: cp $out_dir\idgen-debug.exe
build idgen-debug!: phony $out_dir\idgen-debug.exe $stage_dir\idgen-debug.exe

build $build_dir\release\idgen\src\idgen.obj: cl tools\idgen\src\idgen.cpp || init!
   pdb = $build_dir\idgen.pdb
   flags = $clflags_release
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=idgen /I"tools\idgen\include"

build $build_dir\idgen.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\idgen.icon.res: rc $build_dir\idgen.icon.rc || init!
   extra = /i"./"

build $out_dir\idgen.exe | $out_dir\idgen.pdb: link $out_dir\core-id-with-names.lib $out_dir\core.lib $build_dir\release\idgen\src\idgen.obj $build_dir\idgen.icon.res $build_dir\default.manifest.res || init!
   out_file = idgen.exe
   pdb = $out_dir\idgen.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\idgen.pdb!: pdb $out_dir\idgen.pdb
build $stage_dir\idgen.exe: cp $out_dir\idgen.exe
build idgen!: phony $out_dir\idgen.exe $stage_dir\idgen.exe
build idgen-full!: phony idgen! idgen-debug!

build tools\limp\include\limp_lua.hpp!: limp | tools\limp\meta\limp.lua || init!
   path = tools\limp\include\limp_lua.hpp
   extra = -f

build tools\limp\include\limp_lua.hpp: limp | tools\limp\meta\limp.lua || init!
   path = tools\limp\include\limp_lua.hpp
   extra = -f

build $build_dir\debug\limp\src\limp.obj: cl tools\limp\src\limp.cpp || init!
   pdb = $build_dir\limp-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=limp /DBE_TARGET_BASE=limp /I"tools\limp\include"

build $build_dir\debug\limp\src\limp_app.obj: cl tools\limp\src\limp_app.cpp || init!
   pdb = $build_dir\limp-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=limp /DBE_TARGET_BASE=limp /I"tools\limp\include"

build $build_dir\debug\limp\src\limp_processor.obj: cl tools\limp\src\limp_processor.cpp || init!
   pdb = $build_dir\limp-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=limp /DBE_TARGET_BASE=limp /I"tools\limp\include"

build $build_dir\limp-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\limp-debug.icon.res: rc $build_dir\limp-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\limp-debug.exe | $out_dir\limp-debug.pdb: link $ext_lib_dir\luaxx-debug.lib $ext_lib_dir\zlib-static-debug.lib $out_dir\blt-debug.lib $out_dir\cli-debug.lib $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\ctable-debug.lib $out_dir\luablt-debug.lib $out_dir\luacore-debug.lib $out_dir\luautil-debug.lib $out_dir\util-debug.lib $build_dir\debug\limp\src\limp.obj $build_dir\debug\limp\src\limp_app.obj $build_dir\debug\limp\src\limp_processor.obj $build_dir\limp-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = limp-debug.exe
   pdb = $out_dir\limp-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\limp-debug.pdb!: pdb $out_dir\limp-debug.pdb
build $stage_dir\limp-debug.exe: cp $out_dir\limp-debug.exe
build limp-debug!: phony $out_dir\limp-debug.exe $stage_dir\limp-debug.exe

build $build_dir\release\limp\src\limp.obj: cl tools\limp\src\limp.cpp || init!
   pdb = $build_dir\limp.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=limp /DBE_TARGET_BASE=limp /I"tools\limp\include"

build $build_dir\release\limp\src\limp_app.obj: cl tools\limp\src\limp_app.cpp || init!
   pdb = $build_dir\limp.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=limp /DBE_TARGET_BASE=limp /I"tools\limp\include"

build $build_dir\release\limp\src\limp_processor.obj: cl tools\limp\src\limp_processor.cpp || init!
   pdb = $build_dir\limp.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=limp /DBE_TARGET_BASE=limp /I"tools\limp\include"

build $build_dir\limp.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\limp.icon.res: rc $build_dir\limp.icon.rc || init!
   extra = /i"./"

build $out_dir\limp.exe | $out_dir\limp.pdb: link $ext_lib_dir\luaxx.lib $ext_lib_dir\zlib-static.lib $out_dir\blt.lib $out_dir\cli.lib $out_dir\core-id.lib $out_dir\core.lib $out_dir\ctable.lib $out_dir\luablt.lib $out_dir\luacore.lib $out_dir\luautil.lib $out_dir\util.lib $build_dir\release\limp\src\limp.obj $build_dir\release\limp\src\limp_app.obj $build_dir\release\limp\src\limp_processor.obj $build_dir\limp.icon.res $build_dir\default.manifest.res || init!
   out_file = limp.exe
   pdb = $out_dir\limp.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\limp.pdb!: pdb $out_dir\limp.pdb
build $stage_dir\limp.exe: cp $out_dir\limp.exe
build $bin_dir\limp.exe: deploy $stage_dir\limp.exe
build deploy-limp!: phony $bin_dir\limp.exe
build limp!: phony $out_dir\limp.exe $stage_dir\limp.exe
build limp-full!: phony limp! limp-debug!

build $build_dir\debug\psc\src\psc.obj: cl tools\psc\src\psc.cpp || init!
   pdb = $build_dir\psc-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=psc /DBE_TARGET_BASE=psc /I"tools\psc\include"

build $build_dir\psc-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\psc-debug.icon.res: rc $build_dir\psc-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\psc-debug.exe | $out_dir\psc-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $build_dir\debug\psc\src\psc.obj $build_dir\psc-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = psc-debug.exe
   pdb = $out_dir\psc-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\psc-debug.pdb!: pdb $out_dir\psc-debug.pdb
build $stage_dir\psc-debug.exe: cp $out_dir\psc-debug.exe
build psc-debug!: phony $out_dir\psc-debug.exe $stage_dir\psc-debug.exe

build $build_dir\release\psc\src\psc.obj: cl tools\psc\src\psc.cpp || init!
   pdb = $build_dir\psc.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=psc /DBE_TARGET_BASE=psc /I"tools\psc\include"

build $build_dir\psc.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\psc.icon.res: rc $build_dir\psc.icon.rc || init!
   extra = /i"./"

build $out_dir\psc.exe | $out_dir\psc.pdb: link $out_dir\core-id.lib $out_dir\core.lib $build_dir\release\psc\src\psc.obj $build_dir\psc.icon.res $build_dir\default.manifest.res || init!
   out_file = psc.exe
   pdb = $out_dir\psc.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\psc.pdb!: pdb $out_dir\psc.pdb
build $stage_dir\psc.exe: cp $out_dir\psc.exe
build psc!: phony $out_dir\psc.exe $stage_dir\psc.exe
build psc-full!: phony psc! psc-debug!

build $build_dir\debug\sizeof\src\size_of_type.obj: cl tools\sizeof\src\size_of_type.cpp || init!
   pdb = $build_dir\sizeof-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=sizeof /DBE_TARGET_BASE=sizeof /I"tools\sizeof\include"

build $build_dir\debug\sizeof\src\sizeof.obj: cl tools\sizeof\src\sizeof.cpp || init!
   pdb = $build_dir\sizeof-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=sizeof /DBE_TARGET_BASE=sizeof /I"tools\sizeof\include"

build $build_dir\sizeof-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\sizeof-debug.icon.res: rc $build_dir\sizeof-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\sizeof-debug.exe | $out_dir\sizeof-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\util-debug.lib $build_dir\debug\sizeof\src\size_of_type.obj $build_dir\debug\sizeof\src\sizeof.obj $build_dir\sizeof-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = sizeof-debug.exe
   pdb = $out_dir\sizeof-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\sizeof-debug.pdb!: pdb $out_dir\sizeof-debug.pdb
build $stage_dir\sizeof-debug.exe: cp $out_dir\sizeof-debug.exe
build sizeof-debug!: phony $out_dir\sizeof-debug.exe $stage_dir\sizeof-debug.exe

build $build_dir\release\sizeof\src\size_of_type.obj: cl tools\sizeof\src\size_of_type.cpp || init!
   pdb = $build_dir\sizeof.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=sizeof /DBE_TARGET_BASE=sizeof /I"tools\sizeof\include"

build $build_dir\release\sizeof\src\sizeof.obj: cl tools\sizeof\src\sizeof.cpp || init!
   pdb = $build_dir\sizeof.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=sizeof /DBE_TARGET_BASE=sizeof /I"tools\sizeof\include"

build $build_dir\sizeof.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\sizeof.icon.res: rc $build_dir\sizeof.icon.rc || init!
   extra = /i"./"

build $out_dir\sizeof.exe | $out_dir\sizeof.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\util.lib $build_dir\release\sizeof\src\size_of_type.obj $build_dir\release\sizeof\src\sizeof.obj $build_dir\sizeof.icon.res $build_dir\default.manifest.res || init!
   out_file = sizeof.exe
   pdb = $out_dir\sizeof.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\sizeof.pdb!: pdb $out_dir\sizeof.pdb
build $stage_dir\sizeof.exe: cp $out_dir\sizeof.exe
build sizeof!: phony $out_dir\sizeof.exe $stage_dir\sizeof.exe
build sizeof-full!: phony sizeof! sizeof-debug!

build $build_dir\debug\sysinfo\src\memory_status.obj: cl tools\sysinfo\src\memory_status.cpp || init!
   pdb = $build_dir\sysinfo-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\debug\sysinfo\src\monitor_info.obj: cl tools\sysinfo\src\monitor_info.cpp || init!
   pdb = $build_dir\sysinfo-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\debug\sysinfo\src\sysinfo.obj: cl tools\sysinfo\src\sysinfo.cpp || init!
   pdb = $build_dir\sysinfo-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\debug\sysinfo\src\versions.obj: cl tools\sysinfo\src\versions.cpp || init!
   pdb = $build_dir\sysinfo-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\sysinfo-debug.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\sysinfo-debug.icon.res: rc $build_dir\sysinfo-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\sysinfo-debug.exe | $out_dir\sysinfo-debug.pdb: link $ext_lib_dir\glfw-debug.lib $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\platform-debug.lib $out_dir\util-debug.lib $build_dir\debug\sysinfo\src\memory_status.obj $build_dir\debug\sysinfo\src\monitor_info.obj $build_dir\debug\sysinfo\src\sysinfo.obj $build_dir\debug\sysinfo\src\versions.obj $build_dir\sysinfo-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = sysinfo-debug.exe
   pdb = $out_dir\sysinfo-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\sysinfo-debug.pdb!: pdb $out_dir\sysinfo-debug.pdb
build $stage_dir\sysinfo-debug.exe: cp $out_dir\sysinfo-debug.exe
build sysinfo-debug!: phony $out_dir\sysinfo-debug.exe $stage_dir\sysinfo-debug.exe

build $build_dir\release\sysinfo\src\memory_status.obj: cl tools\sysinfo\src\memory_status.cpp || init!
   pdb = $build_dir\sysinfo.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\release\sysinfo\src\monitor_info.obj: cl tools\sysinfo\src\monitor_info.cpp || init!
   pdb = $build_dir\sysinfo.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\release\sysinfo\src\sysinfo.obj: cl tools\sysinfo\src\sysinfo.cpp || init!
   pdb = $build_dir\sysinfo.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\release\sysinfo\src\versions.obj: cl tools\sysinfo\src\versions.cpp || init!
   pdb = $build_dir\sysinfo.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=sysinfo /DBE_TARGET_BASE=sysinfo /I"tools\sysinfo\include"

build $build_dir\sysinfo.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\sysinfo.icon.res: rc $build_dir\sysinfo.icon.rc || init!
   extra = /i"./"

build $out_dir\sysinfo.exe | $out_dir\sysinfo.pdb: link $ext_lib_dir\glfw.lib $out_dir\core-id.lib $out_dir\core.lib $out_dir\platform.lib $out_dir\util.lib $build_dir\release\sysinfo\src\memory_status.obj $build_dir\release\sysinfo\src\monitor_info.obj $build_dir\release\sysinfo\src\sysinfo.obj $build_dir\release\sysinfo\src\versions.obj $build_dir\sysinfo.icon.res $build_dir\default.manifest.res || init!
   out_file = sysinfo.exe
   pdb = $out_dir\sysinfo.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\sysinfo.pdb!: pdb $out_dir\sysinfo.pdb
build $stage_dir\sysinfo.exe: cp $out_dir\sysinfo.exe
build sysinfo!: phony $out_dir\sysinfo.exe $stage_dir\sysinfo.exe
build sysinfo-full!: phony sysinfo! sysinfo-debug!

build $build_dir\release\wedo\src\wedo.obj: cl tools\wedo\src\wedo.cpp || init!
   pdb = $build_dir\wedo.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=wedo /DBE_TARGET_BASE=wedo /I"tools\wedo\include"

build $build_dir\wedo.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"

build $build_dir\wedo.icon.res: rc $build_dir\wedo.icon.rc || init!
   extra = /i"./"

build $build_dir\elevated.manifest: putfile || init!
   contents = ^<?xml version=^"1.0^" encoding=^"UTF-8^" standalone=^"yes^"?^>&echo:$
^<assembly xmlns=^"urn:schemas-microsoft-com:asm.v1^" manifestVersion=^"1.0^"^>&echo:$
   ^<trustInfo xmlns=^"urn:schemas-microsoft-com:asm.v3^"^>&echo:$
      ^<security^>&echo:$
         ^<requestedPrivileges^>&echo:$
            ^<requestedExecutionLevel level=^"requireAdministrator^" uiAccess=^"false^"/^>&echo:$
         ^</requestedPrivileges^>&echo:$
      ^</security^>&echo:$
   ^</trustInfo^>&echo:$
^</assembly^>

build $build_dir\elevated.manifest.rc: putfile | $build_dir\elevated.manifest
   contents = #include ^<winuser.h^>&echo:$
1 RT_MANIFEST ^"elevated.manifest^"
build $build_dir\elevated.manifest.res: rc $build_dir\elevated.manifest.rc || init!

build $out_dir\wedo.exe | $out_dir\wedo.pdb: link $build_dir\release\wedo\src\wedo.obj $build_dir\wedo.icon.res $build_dir\elevated.manifest.res || init!
   out_file = wedo.exe
   pdb = $out_dir\wedo.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\wedo.pdb!: pdb $out_dir\wedo.pdb
build $stage_dir\wedo.exe: cp $out_dir\wedo.exe
build $bin_dir\wedo.exe: deploy $stage_dir\wedo.exe
build deploy-wedo!: phony $bin_dir\wedo.exe
build wedo!: phony $out_dir\wedo.exe $stage_dir\wedo.exe
build wedo-full!: phony wedo!

build $build_dir\debug\consolecolors\src\consolecolors.obj: cl demos\consolecolors\src\consolecolors.cpp || init!
   pdb = $build_dir\consolecolors-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=consolecolors /DBE_TARGET_BASE=consolecolors /I"demos\consolecolors\include"

build $build_dir\consolecolors-debug.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"

build $build_dir\consolecolors-debug.icon.res: rc $build_dir\consolecolors-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\consolecolors-debug.exe | $out_dir\consolecolors-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $build_dir\debug\consolecolors\src\consolecolors.obj $build_dir\consolecolors-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = consolecolors-debug.exe
   pdb = $out_dir\consolecolors-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\consolecolors-debug.pdb!: pdb $out_dir\consolecolors-debug.pdb
build $stage_dir\consolecolors-debug.exe: cp $out_dir\consolecolors-debug.exe
build consolecolors-debug!: phony $out_dir\consolecolors-debug.exe $stage_dir\consolecolors-debug.exe

build $build_dir\release\consolecolors\src\consolecolors.obj: cl demos\consolecolors\src\consolecolors.cpp || init!
   pdb = $build_dir\consolecolors.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=consolecolors /DBE_TARGET_BASE=consolecolors /I"demos\consolecolors\include"

build $build_dir\consolecolors.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"

build $build_dir\consolecolors.icon.res: rc $build_dir\consolecolors.icon.rc || init!
   extra = /i"./"

build $out_dir\consolecolors.exe | $out_dir\consolecolors.pdb: link $out_dir\core-id.lib $out_dir\core.lib $build_dir\release\consolecolors\src\consolecolors.obj $build_dir\consolecolors.icon.res $build_dir\default.manifest.res || init!
   out_file = consolecolors.exe
   pdb = $out_dir\consolecolors.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\consolecolors.pdb!: pdb $out_dir\consolecolors.pdb
build $stage_dir\consolecolors.exe: cp $out_dir\consolecolors.exe
build consolecolors!: phony $out_dir\consolecolors.exe $stage_dir\consolecolors.exe
build consolecolors-full!: phony consolecolors! consolecolors-debug!

build $build_dir\debug\consoletest\src\consoletest.obj: cl demos\consoletest\src\consoletest.cpp || init!
   pdb = $build_dir\consoletest-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=consoletest /DBE_TARGET_BASE=consoletest /I"demos\consoletest\include"

build $build_dir\consoletest-debug.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"

build $build_dir\consoletest-debug.icon.res: rc $build_dir\consoletest-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\consoletest-debug.exe | $out_dir\consoletest-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $out_dir\ctable-debug.lib $build_dir\debug\consoletest\src\consoletest.obj $build_dir\consoletest-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = consoletest-debug.exe
   pdb = $out_dir\consoletest-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\consoletest-debug.pdb!: pdb $out_dir\consoletest-debug.pdb
build $stage_dir\consoletest-debug.exe: cp $out_dir\consoletest-debug.exe
build consoletest-debug!: phony $out_dir\consoletest-debug.exe $stage_dir\consoletest-debug.exe

build $build_dir\release\consoletest\src\consoletest.obj: cl demos\consoletest\src\consoletest.cpp || init!
   pdb = $build_dir\consoletest.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=consoletest /DBE_TARGET_BASE=consoletest /I"demos\consoletest\include"

build $build_dir\consoletest.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"

build $build_dir\consoletest.icon.res: rc $build_dir\consoletest.icon.rc || init!
   extra = /i"./"

build $out_dir\consoletest.exe | $out_dir\consoletest.pdb: link $out_dir\core-id.lib $out_dir\core.lib $out_dir\ctable.lib $build_dir\release\consoletest\src\consoletest.obj $build_dir\consoletest.icon.res $build_dir\default.manifest.res || init!
   out_file = consoletest.exe
   pdb = $out_dir\consoletest.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\consoletest.pdb!: pdb $out_dir\consoletest.pdb
build $stage_dir\consoletest.exe: cp $out_dir\consoletest.exe
build consoletest!: phony $out_dir\consoletest.exe $stage_dir\consoletest.exe
build consoletest-full!: phony consoletest! consoletest-debug!

build $build_dir\debug\exprint\src\exprint.obj: cl demos\exprint\src\exprint.cpp || init!
   pdb = $build_dir\exprint-debug.pdb
   flags = $clflags_debug
   extra = /DBE_TARGET=exprint /DBE_TARGET_BASE=exprint /I"demos\exprint\include"

build $build_dir\exprint-debug.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"

build $build_dir\exprint-debug.icon.res: rc $build_dir\exprint-debug.icon.rc || init!
   extra = /i"./"

build $out_dir\exprint-debug.exe | $out_dir\exprint-debug.pdb: link $out_dir\core-debug.lib $out_dir\core-id-debug.lib $build_dir\debug\exprint\src\exprint.obj $build_dir\exprint-debug.icon.res $build_dir\default.manifest.res || init!
   out_file = exprint-debug.exe
   pdb = $out_dir\exprint-debug.pdb
   flags = $linkflags_console_debug
   extra = 
build $out_dir\exprint-debug.pdb!: pdb $out_dir\exprint-debug.pdb
build $stage_dir\exprint-debug.exe: cp $out_dir\exprint-debug.exe
build exprint-debug!: phony $out_dir\exprint-debug.exe $stage_dir\exprint-debug.exe

build $build_dir\release\exprint\src\exprint.obj: cl demos\exprint\src\exprint.cpp || init!
   pdb = $build_dir\exprint.pdb
   flags = $clflags_release
   extra = /DBE_TARGET=exprint /DBE_TARGET_BASE=exprint /I"demos\exprint\include"

build $build_dir\exprint.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"

build $build_dir\exprint.icon.res: rc $build_dir\exprint.icon.rc || init!
   extra = /i"./"

build $out_dir\exprint.exe | $out_dir\exprint.pdb: link $out_dir\core-id.lib $out_dir\core.lib $build_dir\release\exprint\src\exprint.obj $build_dir\exprint.icon.res $build_dir\default.manifest.res || init!
   out_file = exprint.exe
   pdb = $out_dir\exprint.pdb
   flags = $linkflags_console_release
   extra = 
build $out_dir\exprint.pdb!: pdb $out_dir\exprint.pdb
build $stage_dir\exprint.exe: cp $out_dir\exprint.exe
build exprint!: phony $out_dir\exprint.exe $stage_dir\exprint.exe
build exprint-full!: phony exprint! exprint-debug!
build all-ext!: phony zlib-static! zlib-static-debug! glfw! glfw-debug! luaxx! luaxx-debug!
build all-blt-debug!: phony blt-debug!
build all-blt!: phony blt!
build all-blt-full!: phony all-blt-debug! all-blt!
build all-cli-debug!: phony cli-debug!
build all-cli!: phony cli!
build all-cli-full!: phony all-cli-debug! all-cli!
build all-core-debug!: phony core-id-debug! core-id-with-names-debug! core-debug! core-test-debug! core-perf-debug!
build all-core!: phony core-id! core-id-with-names! core! core-test! core-perf!
build all-core-full!: phony all-core-debug! all-core!
build all-ctable-debug!: phony ctable-debug! ctable-test-debug!
build all-ctable!: phony ctable! ctable-test!
build all-ctable-full!: phony all-ctable-debug! all-ctable!
build all-luablt-debug!: phony luablt-debug!
build all-luablt!: phony luablt!
build all-luablt-full!: phony all-luablt-debug! all-luablt!
build all-luacore-debug!: phony luacore-debug!
build all-luacore!: phony luacore!
build all-luacore-full!: phony all-luacore-debug! all-luacore!
build all-luautil-debug!: phony luautil-debug!
build all-luautil!: phony luautil!
build all-luautil-full!: phony all-luautil-debug! all-luautil!
build all-perf-debug!: phony perf-debug!
build all-perf!: phony perf!
build all-perf-full!: phony all-perf-debug! all-perf!
build all-platform-debug!: phony platform-debug!
build all-platform!: phony platform!
build all-platform-full!: phony all-platform-debug! all-platform!
build all-sqlite-debug!: phony sqlite-debug! sqlite-test-debug!
build all-sqlite!: phony sqlite! sqlite-test!
build all-sqlite-full!: phony all-sqlite-debug! all-sqlite!
build all-testing-debug!: phony testing-debug! testing-test-debug!
build all-testing!: phony testing! testing-test!
build all-testing-full!: phony all-testing-debug! all-testing!
build all-util-debug!: phony util-debug! util-test-debug! util-perf-debug!
build all-util!: phony util! util-test! util-perf!
build all-util-full!: phony all-util-debug! all-util!
build all-blinte-debug!: phony blinte-debug!
build all-blinte!: phony blinte!
build all-blinte-full!: phony all-blinte-debug! all-blinte!
build all-bltc-debug!: phony bltc-debug!
build all-bltc!: phony bltc!
build all-bltc-full!: phony all-bltc-debug! all-bltc!
build all-ccolor-debug!: phony ccolor-debug!
build all-ccolor!: phony ccolor!
build all-ccolor-full!: phony all-ccolor-debug! all-ccolor!
build all-idgen-debug!: phony idgen-debug!
build all-idgen!: phony idgen!
build all-idgen-full!: phony all-idgen-debug! all-idgen!
build all-limp-debug!: phony limp-debug!
build all-limp!: phony limp!
build all-limp-full!: phony all-limp-debug! all-limp!
build deploy-all-limp!: phony deploy-limp!
build all-psc-debug!: phony psc-debug!
build all-psc!: phony psc!
build all-psc-full!: phony all-psc-debug! all-psc!
build all-sizeof-debug!: phony sizeof-debug!
build all-sizeof!: phony sizeof!
build all-sizeof-full!: phony all-sizeof-debug! all-sizeof!
build all-sysinfo-debug!: phony sysinfo-debug!
build all-sysinfo!: phony sysinfo!
build all-sysinfo-full!: phony all-sysinfo-debug! all-sysinfo!
build all-wedo!: phony wedo!
build all-wedo-full!: phony all-wedo!
build deploy-all-wedo!: phony deploy-wedo!
build all-consolecolors-debug!: phony consolecolors-debug!
build all-consolecolors!: phony consolecolors!
build all-consolecolors-full!: phony all-consolecolors-debug! all-consolecolors!
build all-consoletest-debug!: phony consoletest-debug!
build all-consoletest!: phony consoletest!
build all-consoletest-full!: phony all-consoletest-debug! all-consoletest!
build all-exprint-debug!: phony exprint-debug!
build all-exprint!: phony exprint!
build all-exprint-full!: phony all-exprint-debug! all-exprint!
build all-debug!: phony all-blt-debug! all-cli-debug! all-core-debug! all-ctable-debug! all-luablt-debug! all-luacore-debug! all-luautil-debug! all-perf-debug! all-platform-debug! all-sqlite-debug! all-testing-debug! all-util-debug! all-blinte-debug! all-bltc-debug! all-ccolor-debug! all-idgen-debug! all-limp-debug! all-psc-debug! all-sizeof-debug! all-sysinfo-debug! all-consolecolors-debug! all-consoletest-debug! all-exprint-debug!
build all-release!: phony all-blt! all-cli! all-core! all-ctable! all-luablt! all-luacore! all-luautil! all-perf! all-platform! all-sqlite! all-testing! all-util! all-blinte! all-bltc! all-ccolor! all-idgen! all-limp! all-psc! all-sizeof! all-sysinfo! all-wedo! all-consolecolors! all-consoletest! all-exprint!
build all-full!: phony all-debug! all-release!
build deploy!!: phony deploy-all-limp! deploy-all-wedo!
build pdb!!: phony $out_dir\core-test-debug.pdb! $out_dir\core-test.pdb! $out_dir\core-perf-debug.pdb! $out_dir\core-perf.pdb! $out_dir\ctable-test-debug.pdb! $out_dir\ctable-test.pdb! $out_dir\sqlite-test-debug.pdb! $out_dir\sqlite-test.pdb! $out_dir\testing-test-debug.pdb! $out_dir\testing-test.pdb! $out_dir\util-test-debug.pdb! $out_dir\util-test.pdb! $out_dir\util-perf-debug.pdb! $out_dir\util-perf.pdb! $out_dir\blinte-debug.pdb! $out_dir\blinte.pdb! $out_dir\bltc-debug.pdb! $out_dir\bltc.pdb! $out_dir\ccolor-debug.pdb! $out_dir\ccolor.pdb! $out_dir\idgen-debug.pdb! $out_dir\idgen.pdb! $out_dir\limp-debug.pdb! $out_dir\limp.pdb! $out_dir\psc-debug.pdb! $out_dir\psc.pdb! $out_dir\sizeof-debug.pdb! $out_dir\sizeof.pdb! $out_dir\sysinfo-debug.pdb! $out_dir\sysinfo.pdb! $out_dir\wedo.pdb! $out_dir\consolecolors-debug.pdb! $out_dir\consolecolors.pdb! $out_dir\consoletest-debug.pdb! $out_dir\consoletest.pdb! $out_dir\exprint-debug.pdb! $out_dir\exprint.pdb!
build limp!!: phony modules\cli\include\section_ids.hpp! modules\core\include\log_attrib_ids.hpp! modules\core\include\service_ids.hpp! modules\luablt\src\blt.cpp! modules\sqlite\include\transaction_type.hpp! modules\sqlite\src\transaction_type.cpp! modules\sqlite\include\result_type.hpp! modules\sqlite\src\result_type.cpp! tools\limp\include\limp_lua.hpp!

default all-full!

# ################ END OF GENERATED CODE ################ ##
